{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/background-page/background-communication/chrome-browser/chrome-background-communication.ts","./src/app/background-page/background.component.ts","./src/app/background-page/background.component.html","./src/app/background-page/background.module.ts","./src/app/background-page/classifier-manager/classifier-manager.ts","./src/app/background-page/classifier-manager/cnn-loaders/input-button-loader/input-button-loader.ts","./src/app/background-page/classifier-manager/cnn-loaders/tensorhub-loader/image-net-class-names.ts","./src/app/background-page/classifier-manager/cnn-loaders/tensorhub-loader/tensor-hub-model-loader.ts","./src/app/background-page/convolutional-neural-network/convolutional-neural-network.ts","./src/app/background-page/load-image/load-image.ts","./src/app/interfaces/notifications.ts","./src/app/navbar/nav-bar.component.ts","./src/app/navbar/nav-bar.component.html","./src/app/services/browser-user-interface/browser-user-interface.service.ts","./src/app/services/browser-user-interface/chrome-browser/chrome-user-interface-communication.ts","./src/environments/environment.ts","./src/main.ts","./src/utils/browser-communication.ts","./src/utils/cnn-model-loader.ts","./src/utils/logger/time-logger.ts","./src/utils/module.ts","./src/utils/user-interface-communication.ts","node-fetch (ignored)","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\"\nimport {RouterModule, Routes} from \"@angular/router\"\nimport {BackgroundComponent} from \"./background-page/background.component\"\n\n\nconst routes: Routes = [\n    {path: \"filters\", loadChildren: () => import(\"./filters-page/filters.module\").then(m => m.FiltersModule)},\n    {path: \"models\", loadChildren: () => import(\"./models-page/cnn-models.module\").then(m => m.CnnModelsModule)},\n    {path: \"options\", loadChildren: () => import(\"./options-page/options-page.module\").then(m => m.OptionsPageModule)},\n    {path: \"background\", component: BackgroundComponent},\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {useHash: true})], // <-- uso de hash habilitado\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from \"@angular/core\"\n\n\n@Component({\n    selector: \"app-root\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n    title = \"nan-chrome-extension\"\n\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n\n\n    }\n}\n","<app-nav-bar></app-nav-bar>\n\n<router-outlet></router-outlet>\n","import {BrowserModule} from \"@angular/platform-browser\"\nimport {NgModule} from \"@angular/core\"\n\nimport {AppRoutingModule} from \"./app-routing.module\"\nimport {AppComponent} from \"./app.component\"\nimport {NavBarComponent} from \"./navbar/nav-bar.component\"\n\nimport {BrowserUserInterfaceService} from \"./services/browser-user-interface/browser-user-interface.service\"\nimport {BackgroundModule} from \"./background-page/background.module\"\n\n// @ts-ignore\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavBarComponent,\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BackgroundModule,\n    ],\n    providers: [BrowserUserInterfaceService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ClassNameUrlsNotification, Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../../interfaces/notifications\"\nimport {BrowserCommunication} from \"../../../../utils/browser-communication\"\nimport {USER_INTERFACE_COMMUNICATION_ID} from \"../../../../utils/user-interface-communication\"\nimport Port = chrome.runtime.Port\n\nexport const GET_CURRENT_SETTINGS_MESSAGE = \"get current cnn settings\"\n\nexport const GET_LOCAL_CLASS_NAME_URLS = \" get local class name urls\"\n\nexport class ChromeBackgroundCommunication extends BrowserCommunication <Notification, Notification> {\n\n    constructor() {\n        super()\n        this.ports = {}\n\n    }\n\n    private static erros = {\n        enableContentScript: new Error(\"Must enable Chrome Content Scripts\"),\n        enableStorage: new Error(\"Must add Storage permission\"),\n        uuidUndefined: new Error(\"UUID undefined\"),\n        urlsUndefined: new Error(\"URLS undefined\")\n    }\n\n    private storeKey = \"settings\"\n\n    private readonly ports: { [key: string]: Port }\n\n    private currentUserInterfacePort: Port\n\n    private localClassesNames = {\n        [\"imagenet-ilsvrc-2012-cls\"]: chrome.runtime.getURL(\"assets/modelJS/Image-net-class.json\")\n    }\n\n\n    protected checkPermissions() {\n        if (chrome.runtime === undefined || chrome.runtime.getURL === undefined) {\n            throw ChromeBackgroundCommunication.erros.enableContentScript\n        }\n\n        if (chrome.storage === undefined) {\n            throw ChromeBackgroundCommunication.erros.enableStorage\n        }\n    }\n\n    tryToStart() {\n        console.log(\"stating browser listener ...\")\n        try {\n            this.checkPermissions()\n            chrome.runtime.onConnect.addListener(this.onConnect.bind(this))\n            this.loadLocalData()\n            this.sendClassNameUrls()\n        } catch (e) {\n            console.log(\"Unable to  start runtime\")\n            console.log(e)\n        }\n\n\n    }\n\n\n    protected complete() {\n    }\n\n    protected error(e) {\n    }\n\n    protected next(notification: Notification) {\n\n        if (this.ports[notification.id]) {\n            this.ports[notification.id].postMessage(notification)\n        }\n\n\n        if (notification.type === NotificationTypes.TensorFlowHubModelNotification) {\n            console.log(\"Chrome Background salvando Notificação\", notification)\n            this.storeSettings(notification as TensorFlowHubModelNotification)\n        }\n\n    }\n\n\n    private onConnect(port: Port) {\n\n        this.ports[port.name] = port\n\n        port.onMessage.addListener(this.listener.bind(this))\n        port.onDisconnect.addListener(this.disconnect.bind(this))\n\n    }\n\n    private listener(notification: Notification, port: Port) {\n        console.log(\"chrome background listener\", notification, NotificationTypes.ImageDataNotification)\n\n        notification.id = port.name\n        this.subject.next(notification)\n\n        if (notification.type === NotificationTypes.Notification) {\n            this.simpleNotifications(notification, port)\n        }\n\n\n    }\n\n    private disconnect(port: Port) {\n        delete this.ports[port.name]\n    }\n\n\n    private loadLocalData() {\n        chrome.storage.local.get([this.storeKey], this.callbackStorage.bind(this))\n    }\n\n    private callbackStorage(result: any) {\n\n        const notification: TensorFlowHubModelNotification = {\n            ...result.settings,\n            type: NotificationTypes.TensorFlowHubModelNotification,\n            id: USER_INTERFACE_COMMUNICATION_ID\n        }\n\n        if (result.settings) {\n            this.subject.next(notification)\n            this.next(notification)\n        } else if (this.currentUserInterfacePort) {\n            this.next({\n                id: this.currentUserInterfacePort.name,\n                cnnModelHub: {},\n                classNames: {},\n                type: NotificationTypes.TensorFlowHubModelNotification\n            } as TensorFlowHubModelNotification)\n        }\n\n\n    }\n\n    private storeSettings(settings: TensorFlowHubModelNotification) {\n        // até o momento a aplicação não suporta o armazenamento de modelos carregados localmente\n        chrome.storage.local.set({[this.storeKey]: settings})\n        // if (settings.cnnModelHub.url !== \"Local Data\") {\n        //\n        // }\n    }\n\n\n    private simpleNotifications(notification: Notification, port: Port) {\n        if (notification.message === GET_CURRENT_SETTINGS_MESSAGE) {\n            this.currentUserInterfacePort = port\n            this.loadLocalData()\n        } else if (notification.message === GET_LOCAL_CLASS_NAME_URLS) {\n            this.sendClassNameUrls()\n        }\n\n\n    }\n\n    private sendClassNameUrls() {\n        this.subject.next({\n            type: NotificationTypes.ClassNameUrlsNotification,\n            urls: this.localClassesNames\n        } as ClassNameUrlsNotification)\n    }\n\n}\n","import {Component} from \"@angular/core\"\nimport {ConvolutionalNeuralNetwork} from \"./convolutional-neural-network/convolutional-neural-network\"\nimport {LoadImage} from \"./load-image/load-image\"\nimport {ClassifierManager} from \"./classifier-manager/classifier-manager\"\nimport {ChromeBackgroundCommunication} from \"./background-communication/chrome-browser/chrome-background-communication\"\nimport {ENABLE_LOGGERS, TimeLogger} from \"../../utils/logger/time-logger\"\nimport {BrowserCommunication} from \"../../utils/browser-communication\"\nimport {Notification} from \"../interfaces/notifications\"\n\n\n@Component({\n    selector: \"app-background\",\n    templateUrl: \"./background.component.html\",\n})\n\n\nexport class BackgroundComponent {\n\n    private readonly cnn: ConvolutionalNeuralNetwork\n    private readonly loadImage: LoadImage\n    private readonly browser: BrowserCommunication<Notification, Notification>\n    private readonly classifierManager: ClassifierManager\n    private loggerLoadImage: TimeLogger\n    private backgroundTimeLogger: TimeLogger\n\n\n\n    constructor() {\n        this.classifierManager = new ClassifierManager()\n        this.cnn = new ConvolutionalNeuralNetwork()\n        this.loadImage = new LoadImage()\n        this.browser = BackgroundComponent.selectBrowserBackgroundCommunication()\n\n        this.subscribes()\n\n        if (ENABLE_LOGGERS) {\n            this.startLoggers()\n        }\n        this.startFilter()\n\n\n    }\n\n\n    static selectBrowserBackgroundCommunication(): ChromeBackgroundCommunication {\n\n        if (chrome) {\n            return new ChromeBackgroundCommunication()\n        } else {\n            throw new Error(\"Not implemented\")\n        }\n\n    }\n\n    private startFilter() {\n        ENABLE_LOGGERS ? console.log(\"Loggers are enabled\") : console.log(\"Loggers are disabled\")\n\n        this.browser.tryToStart()\n\n\n    }\n\n    private subscribes() {\n\n        this.cnn.observe(this.browser)\n        this.cnn.observe(this.loadImage)\n        this.cnn.observe(this.classifierManager)\n\n        this.loadImage.observe(this.browser)\n\n        this.browser.observe(this.cnn)\n        this.browser.observe(this.classifierManager)\n\n        this.classifierManager.observe(this.browser)\n\n\n    }\n\n    private startLoggers() {\n        this.loggerLoadImage = new TimeLogger(\"time_to_load_image_in_background\")\n        this.backgroundTimeLogger = new TimeLogger(\"cnn_time_to_predict_image\")\n\n        this.loggerLoadImage.observe(this.browser)\n        this.loggerLoadImage.observe(this.loadImage)\n\n\n        this.backgroundTimeLogger.observe(this.loadImage)\n        this.backgroundTimeLogger.observe(this.cnn)\n\n\n    }\n\n}\n","<p>background works!</p>\n","import {NgModule} from \"@angular/core\"\nimport {CommonModule} from \"@angular/common\"\nimport {BackgroundComponent} from \"./background.component\"\n\n\n@NgModule({\n  declarations: [BackgroundComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [BackgroundComponent]\n})\nexport class BackgroundModule {\n}\n","import * as tf from \"@tensorflow/tfjs\"\nimport Module from \"../../../utils/module\"\nimport {CnnModelSettingNotification, Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../interfaces/notifications\"\nimport CnnModelLoader from \"../../../utils/cnn-model-loader\"\nimport {TensorHubModelLoader} from \"./cnn-loaders/tensorhub-loader/tensor-hub-model-loader\"\nimport {InputButtonLoader} from \"./cnn-loaders/input-button-loader/input-button-loader\"\nimport {TensorflowHubModel} from \"../../interfaces/tensorflow-hub-model\"\n\n\nexport class ClassifierManager extends Module<Notification, Notification> {\n\n    constructor() {\n        super()\n    }\n\n    private callbacks = {\n        [NotificationTypes.TensorFlowHubModelNotification]: this.tensorHubNotification.bind(this),\n        [NotificationTypes.LocalModelInputNotification]: this.tryToUpdateCnnModel.bind(this)\n    }\n\n    private waysToLoadModel = {\n        [NotificationTypes.TensorFlowHubModelNotification]: TensorHubModelLoader,\n        [NotificationTypes.LocalModelInputNotification]: InputButtonLoader\n    }\n\n    private currentSettings: TensorFlowHubModelNotification\n\n    next(message: Notification) {\n\n\n        if (this.callbacks[message.type]) {\n            this.callbacks[message.type](message)\n        }\n\n    }\n\n\n    complete(): void {\n    }\n\n    error(e): void {\n    }\n\n\n    private async tensorHubNotification(notification: TensorFlowHubModelNotification) {\n\n        if (this.needToUpdateCnnModel(notification)) {\n            await this.tryToUpdateCnnModel(notification)\n        } else {\n            this.updateSetting(notification)\n            this.notify()\n        }\n\n\n    }\n\n    private async tryToUpdateCnnModel(notification: Notification) {\n\n        try {\n            const {settings, model} = await this.loadCnnModel(notification)\n            this.updateSetting(settings)\n            this.notify(model)\n        } catch (e) {\n            console.warn(\"Unable do update model\", e)\n            const settings: TensorFlowHubModelNotification = {\n                type: NotificationTypes.TensorFlowHubModelNotification,\n                classNames: {},\n                cnnModelHub: {} as TensorflowHubModel\n            }\n            this.updateSetting(settings)\n            this.notify()\n\n        }\n\n    }\n\n\n    private async loadCnnModel(notification: Notification) {\n\n        const modelLoader: CnnModelLoader = new this.waysToLoadModel[notification.type](notification)\n        const settings = await modelLoader.getSettings()\n        const model = await modelLoader.getCnnModel()\n\n        return {settings, model}\n    }\n\n\n    private needToUpdateCnnModel(settings: TensorFlowHubModelNotification) {\n        return this.needToUpdateModel(settings.cnnModelHub.url) || this.needToUpdateClassNames(settings.cnnModelHub.dataset)\n    }\n\n\n    private notify(cnnModel?: tf.GraphModel) {\n\n\n        this.notifyCnn(cnnModel)\n\n\n        this.notifyUserInterface()\n\n    }\n\n\n    private needToUpdateModel(url: string): boolean {\n        if (!url) {\n            return false\n        }\n\n        if (!this.currentSettings) {\n            return true\n        }\n\n        if (!this.currentSettings.cnnModelHub) {\n            return true\n        }\n\n\n        return this.currentSettings.cnnModelHub.url !== url\n\n    }\n\n    private needToUpdateClassNames(dataset: string) {\n        if (!dataset) {\n            return false\n        }\n\n        if (!this.currentSettings) {\n            return true\n        }\n\n        if (!this.currentSettings.cnnModelHub.dataset) {\n            return true\n        }\n\n        return this.currentSettings.cnnModelHub.dataset !== dataset\n    }\n\n    private updateSetting(settings: TensorFlowHubModelNotification) {\n\n        const enables = settings.enables ? settings.enables : Object.values(settings.classNames).map(() => true)\n        const oldSettings = this.currentSettings ? this.currentSettings : {}\n\n\n        this.currentSettings = {...oldSettings, ...settings, enables}\n\n    }\n\n\n    private notifyCnn(cnnModel: tf.GraphModel) {\n        const cnnMessage: CnnModelSettingNotification = {\n            id: \"ConvolutionalNeuralNetworkSettings\",\n            type: NotificationTypes.CnnModelSettingNotification,\n            cnnModel,\n            classNames: this.currentSettings.classNames,\n            enables: this.currentSettings.enables\n        }\n        this.subject.next(cnnMessage)\n\n    }\n\n    private notifyUserInterface() {\n        this.subject.next(this.currentSettings)\n    }\n}\n","import CnnModelLoader from \"../../../../../utils/cnn-model-loader\"\nimport {Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../../../interfaces/notifications\"\nimport * as tf from \"@tensorflow/tfjs\"\nimport * as JSZIP from \"jszip\"\nimport {USER_INTERFACE_COMMUNICATION_ID} from \"../../../../../utils/user-interface-communication\"\n\nexport class InputButtonLoader extends CnnModelLoader {\n\n    constructor(notification: Notification) {\n        super(notification)\n\n    }\n\n    private zipDir: JSZIP\n    private readonly settingsFileName = \"settings.json\"\n\n    private static async xmlRequest(path: string, type?: XMLHttpRequestResponseType): Promise<any> {\n\n        return new Promise<any>((resolve, reject) => {\n            const xhr = new XMLHttpRequest()\n\n            xhr.addEventListener(\"load\", () => {\n\n                resolve(xhr.response)\n            })\n\n            xhr.addEventListener(\"error\", () => {\n                reject(`Error not solver request`)\n            })\n            xhr.open(\"GET\", path, true)\n            if (type) {\n                xhr.responseType = type\n            }\n            xhr.send()\n        })\n\n    }\n\n\n    async getSettings(): Promise<TensorFlowHubModelNotification> {\n        await this.downloadZipFile()\n\n        const settingsPath = this.recoverySettingsPath()\n        console.log(settingsPath, this.zipDir)\n        const json = await this.zipDir.files[settingsPath].async(\"text\")\n\n        const settings: TensorFlowHubModelNotification = {\n            ...JSON.parse(json),\n            type: NotificationTypes.TensorFlowHubModelNotification,\n            id: USER_INTERFACE_COMMUNICATION_ID\n        }\n\n        this.zipDir.remove(settingsPath)\n\n\n        console.log(\"Zip files\", this.zipDir.files)\n\n        return settings\n    }\n\n    async getCnnModel(): Promise<tf.GraphModel> {\n        await this.downloadZipFile()\n\n        const files = await this.zipFilesToFiles()\n\n        console.log(this.zipDir, files)\n\n        return await tf.loadGraphModel(tf.io.browserFiles(files))\n\n    }\n\n    private async requestZipFile() {\n        console.log(\"loadZipDir notification\", this.notification.message)\n\n\n        const data = await InputButtonLoader.xmlRequest(this.notification.message, \"arraybuffer\")\n\n\n        this.zipDir = await JSZIP.loadAsync(data)\n\n\n    }\n\n    private async downloadZipFile() {\n        if (!this.zipDir) {\n            await this.requestZipFile()\n        }\n    }\n\n\n    private recoverySettingsPath(): string {\n        const zipFiles = Object.values(this.zipDir.files)\n\n        for (const file of zipFiles) {\n            if (file.dir) {\n                return file.name + this.settingsFileName\n            }\n        }\n        throw Error(\"Zip need to have root dir \")\n    }\n\n\n    private async zipFilesToFiles(): Promise<Array<File>> {\n        const zipFiles = this.zipDir.files\n\n        const files = new Array<File>()\n\n        let jsonFile = null\n        for (const zipFile of Object.values(zipFiles)) {\n            if (zipFile.dir || zipFile.name.indexOf(this.settingsFileName) !== -1) {\n                continue\n            }\n            const blob = await zipFile.async(\"blob\")\n            const file = new File([blob], zipFile.name)\n            if (zipFile.name.indexOf(\"model.json\") !== -1) {\n                jsonFile = file\n            } else {\n                files.push(file)\n            }\n\n        }\n\n        return [jsonFile, ...files]\n    }\n\n\n}\n","export const IMAGE_NET_CLASSES = `{\n  \"0\": \"tench, Tinca tinca\",\n  \"1\": \"goldfish, Carassius auratus\",\n  \"2\": \"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias\",\n  \"3\": \"tiger shark, Galeocerdo cuvieri\",\n  \"4\": \"hammerhead, hammerhead shark\",\n  \"5\": \"electric ray, crampfish, numbfish, torpedo\",\n  \"6\": \"stingray\",\n  \"7\": \"cock\",\n  \"8\": \"hen\",\n  \"9\": \"ostrich, Struthio camelus\",\n  \"10\": \"brambling, Fringilla montifringilla\",\n  \"11\": \"goldfinch, Carduelis carduelis\",\n  \"12\": \"house finch, linnet, Carpodacus mexicanus\",\n  \"13\": \"junco, snowbird\",\n  \"14\": \"indigo bunting, indigo finch, indigo bird, Passerina cyanea\",\n  \"15\": \"robin, American robin, Turdus migratorius\",\n  \"16\": \"bulbul\",\n  \"17\": \"jay\",\n  \"18\": \"magpie\",\n  \"19\": \"chickadee\",\n  \"20\": \"water ouzel, dipper\",\n  \"21\": \"kite\",\n  \"22\": \"bald eagle, American eagle, Haliaeetus leucocephalus\",\n  \"23\": \"vulture\",\n  \"24\": \"great grey owl, great gray owl, Strix nebulosa\",\n  \"25\": \"European fire salamander, Salamandra salamandra\",\n  \"26\": \"common newt, Triturus vulgaris\",\n  \"27\": \"eft\",\n  \"28\": \"spotted salamander, Ambystoma maculatum\",\n  \"29\": \"axolotl, mud puppy, Ambystoma mexicanum\",\n  \"30\": \"bullfrog, Rana catesbeiana\",\n  \"31\": \"tree frog, tree-frog\",\n  \"32\": \"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui\",\n  \"33\": \"loggerhead, loggerhead turtle, Caretta caretta\",\n  \"34\": \"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea\",\n  \"35\": \"mud turtle\",\n  \"36\": \"terrapin\",\n  \"37\": \"box turtle, box tortoise\",\n  \"38\": \"banded gecko\",\n  \"39\": \"common iguana, iguana, Iguana iguana\",\n  \"40\": \"American chameleon, anole, Anolis carolinensis\",\n  \"41\": \"whiptail, whiptail lizard\",\n  \"42\": \"agama\",\n  \"43\": \"frilled lizard, Chlamydosaurus kingi\",\n  \"44\": \"alligator lizard\",\n  \"45\": \"Gila monster, Heloderma suspectum\",\n  \"46\": \"green lizard, Lacerta viridis\",\n  \"47\": \"African chameleon, Chamaeleo chamaeleon\",\n  \"48\": \"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis\",\n  \"49\": \"African crocodile, Nile crocodile, Crocodylus niloticus\",\n  \"50\": \"American alligator, Alligator mississipiensis\",\n  \"51\": \"triceratops\",\n  \"52\": \"thunder snake, worm snake, Carphophis amoenus\",\n  \"53\": \"ringneck snake, ring-necked snake, ring snake\",\n  \"54\": \"hognose snake, puff adder, sand viper\",\n  \"55\": \"green snake, grass snake\",\n  \"56\": \"king snake, kingsnake\",\n  \"57\": \"garter snake, grass snake\",\n  \"58\": \"water snake\",\n  \"59\": \"vine snake\",\n  \"60\": \"night snake, Hypsiglena torquata\",\n  \"61\": \"boa constrictor, Constrictor constrictor\",\n  \"62\": \"rock python, rock snake, Python sebae\",\n  \"63\": \"Indian cobra, Naja naja\",\n  \"64\": \"green mamba\",\n  \"65\": \"sea snake\",\n  \"66\": \"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus\",\n  \"67\": \"diamondback, diamondback rattlesnake, Crotalus adamanteus\",\n  \"68\": \"sidewinder, horned rattlesnake, Crotalus cerastes\",\n  \"69\": \"trilobite\",\n  \"70\": \"harvestman, daddy longlegs, Phalangium opilio\",\n  \"71\": \"scorpion\",\n  \"72\": \"black and gold garden spider, Argiope aurantia\",\n  \"73\": \"barn spider, Araneus cavaticus\",\n  \"74\": \"garden spider, Aranea diademata\",\n  \"75\": \"black widow, Latrodectus mactans\",\n  \"76\": \"tarantula\",\n  \"77\": \"wolf spider, hunting spider\",\n  \"78\": \"tick\",\n  \"79\": \"centipede\",\n  \"80\": \"black grouse\",\n  \"81\": \"ptarmigan\",\n  \"82\": \"ruffed grouse, partridge, Bonasa umbellus\",\n  \"83\": \"prairie chicken, prairie grouse, prairie fowl\",\n  \"84\": \"peacock\",\n  \"85\": \"quail\",\n  \"86\": \"partridge\",\n  \"87\": \"African grey, African gray, Psittacus erithacus\",\n  \"88\": \"macaw\",\n  \"89\": \"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita\",\n  \"90\": \"lorikeet\",\n  \"91\": \"coucal\",\n  \"92\": \"bee eater\",\n  \"93\": \"hornbill\",\n  \"94\": \"hummingbird\",\n  \"95\": \"jacamar\",\n  \"96\": \"toucan\",\n  \"97\": \"drake\",\n  \"98\": \"red-breasted merganser, Mergus serrator\",\n  \"99\": \"goose\",\n  \"100\": \"black swan, Cygnus atratus\",\n  \"101\": \"tusker\",\n  \"102\": \"echidna, spiny anteater, anteater\",\n  \"103\": \"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus\",\n  \"104\": \"wallaby, brush kangaroo\",\n  \"105\": \"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus\",\n  \"106\": \"wombat\",\n  \"107\": \"jelly fish\",\n  \"108\": \"sea anemone, anemone\",\n  \"109\": \"brain coral\",\n  \"110\": \"flatworm, platyhelminth\",\n  \"111\": \"nematode, nematode worm, roundworm\",\n  \"112\": \"conch\",\n  \"113\": \"snail\",\n  \"114\": \"slug\",\n  \"115\": \"sea slug, nudibranch\",\n  \"116\": \"chiton, coat-of-mail shell, sea cradle, polyplacophore\",\n  \"117\": \"chambered nautilus, pearly nautilus, nautilus\",\n  \"118\": \"Dungeness crab, Cancer magister\",\n  \"119\": \"rock crab, Cancer irroratus\",\n  \"120\": \"fiddler crab\",\n  \"121\": \"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica\",\n  \"122\": \"American lobster, Northern lobster, Maine lobster, Homarus americanus\",\n  \"123\": \"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish\",\n  \"124\": \"crayfish, crawfish, crawdad, crawdaddy\",\n  \"125\": \"hermit crab\",\n  \"126\": \"isopod\",\n  \"127\": \"white stork, Ciconia ciconia\",\n  \"128\": \"black stork, Ciconia nigra\",\n  \"129\": \"spoonbill\",\n  \"130\": \"flamingo\",\n  \"131\": \"little blue heron, Egretta caerulea\",\n  \"132\": \"American egret, great white heron, Egretta albus\",\n  \"133\": \"bittern\",\n  \"134\": \"crane\",\n  \"135\": \"limpkin, Aramus pictus\",\n  \"136\": \"European gallinule, Porphyrio porphyrio\",\n  \"137\": \"American coot, marsh hen, mud hen, water hen, Fulica americana\",\n  \"138\": \"bustard\",\n  \"139\": \"ruddy turnstone, Arenaria interpres\",\n  \"140\": \"red-backed sandpiper, dunlin, Erolia alpina\",\n  \"141\": \"redshank, Tringa totanus\",\n  \"142\": \"dowitcher\",\n  \"143\": \"oystercatcher, oyster catcher\",\n  \"144\": \"pelican\",\n  \"145\": \"king penguin, Aptenodytes patagonica\",\n  \"146\": \"albatross, mollymawk\",\n  \"147\": \"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus\",\n  \"148\": \"killer whale, killer, orca, grampus, sea wolf, Orcinus orca\",\n  \"149\": \"dugong, Dugong dugon\",\n  \"150\": \"sea lion\",\n  \"151\": \"Chihuahua\",\n  \"152\": \"Japanese spaniel\",\n  \"153\": \"Maltese dog, Maltese terrier, Maltese\",\n  \"154\": \"Pekinese, Pekingese, Peke\",\n  \"155\": \"Shih-Tzu\",\n  \"156\": \"Blenheim spaniel\",\n  \"157\": \"papillon\",\n  \"158\": \"toy terrier\",\n  \"159\": \"Rhodesian ridgeback\",\n  \"160\": \"Afghan hound, Afghan\",\n  \"161\": \"basset, basset hound\",\n  \"162\": \"beagle\",\n  \"163\": \"bloodhound, sleuthhound\",\n  \"164\": \"bluetick\",\n  \"165\": \"black-and-tan coonhound\",\n  \"166\": \"Walker hound, Walker foxhound\",\n  \"167\": \"English foxhound\",\n  \"168\": \"redbone\",\n  \"169\": \"borzoi, Russian wolfhound\",\n  \"170\": \"Irish wolfhound\",\n  \"171\": \"Italian greyhound\",\n  \"172\": \"whippet\",\n  \"173\": \"Ibizan hound, Ibizan Podenco\",\n  \"174\": \"Norwegian elkhound, elkhound\",\n  \"175\": \"otterhound, otter hound\",\n  \"176\": \"Saluki, gazelle hound\",\n  \"177\": \"Scottish deerhound, deerhound\",\n  \"178\": \"Weimaraner\",\n  \"179\": \"Staffordshire bullterrier, Staffordshire bull terrier\",\n  \"180\": \"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier\",\n  \"181\": \"Bedlington terrier\",\n  \"182\": \"Border terrier\",\n  \"183\": \"Kerry blue terrier\",\n  \"184\": \"Irish terrier\",\n  \"185\": \"Norfolk terrier\",\n  \"186\": \"Norwich terrier\",\n  \"187\": \"Yorkshire terrier\",\n  \"188\": \"wire-haired fox terrier\",\n  \"189\": \"Lakeland terrier\",\n  \"190\": \"Sealyham terrier, Sealyham\",\n  \"191\": \"Airedale, Airedale terrier\",\n  \"192\": \"cairn, cairn terrier\",\n  \"193\": \"Australian terrier\",\n  \"194\": \"Dandie Dinmont, Dandie Dinmont terrier\",\n  \"195\": \"Boston bull, Boston terrier\",\n  \"196\": \"miniature schnauzer\",\n  \"197\": \"giant schnauzer\",\n  \"198\": \"standard schnauzer\",\n  \"199\": \"Scotch terrier, Scottish terrier, Scottie\",\n  \"200\": \"Tibetan terrier, chrysanthemum dog\",\n  \"201\": \"silky terrier, Sydney silky\",\n  \"202\": \"soft-coated wheaten terrier\",\n  \"203\": \"West Highland white terrier\",\n  \"204\": \"Lhasa, Lhasa apso\",\n  \"205\": \"flat-coated retriever\",\n  \"206\": \"curly-coated retriever\",\n  \"207\": \"golden retriever\",\n  \"208\": \"Labrador retriever\",\n  \"209\": \"Chesapeake Bay retriever\",\n  \"210\": \"German short-haired pointer\",\n  \"211\": \"vizsla, Hungarian pointer\",\n  \"212\": \"English setter\",\n  \"213\": \"Irish setter, red setter\",\n  \"214\": \"Gordon setter\",\n  \"215\": \"Brittany spaniel\",\n  \"216\": \"clumber, clumber spaniel\",\n  \"217\": \"English springer, English springer spaniel\",\n  \"218\": \"Welsh springer spaniel\",\n  \"219\": \"cocker spaniel, English cocker spaniel, cocker\",\n  \"220\": \"Sussex spaniel\",\n  \"221\": \"Irish water spaniel\",\n  \"222\": \"kuvasz\",\n  \"223\": \"schipperke\",\n  \"224\": \"groenendael\",\n  \"225\": \"malinois\",\n  \"226\": \"briard\",\n  \"227\": \"kelpie\",\n  \"228\": \"komondor\",\n  \"229\": \"Old English sheepdog, bobtail\",\n  \"230\": \"Shetland sheepdog, Shetland sheep dog, Shetland\",\n  \"231\": \"collie\",\n  \"232\": \"Border collie\",\n  \"233\": \"Bouvier des Flandres, Bouviers des Flandres\",\n  \"234\": \"Rottweiler\",\n  \"235\": \"German shepherd, German shepherd dog, German police dog, alsatian\",\n  \"236\": \"Doberman, Doberman pinscher\",\n  \"237\": \"miniature pinscher\",\n  \"238\": \"Greater Swiss Mountain dog\",\n  \"239\": \"Bernese mountain dog\",\n  \"240\": \"Appenzeller\",\n  \"241\": \"EntleBucher\",\n  \"242\": \"boxer\",\n  \"243\": \"bull mastiff\",\n  \"244\": \"Tibetan mastiff\",\n  \"245\": \"French bulldog\",\n  \"246\": \"Great Dane\",\n  \"247\": \"Saint Bernard, St Bernard\",\n  \"248\": \"Eskimo dog, husky\",\n  \"249\": \"malamute, malemute, Alaskan malamute\",\n  \"250\": \"Siberian husky\",\n  \"251\": \"dalmatian, coach dog, carriage dog\",\n  \"252\": \"affenpinscher, monkey pinscher, monkey dog\",\n  \"253\": \"basenji\",\n  \"254\": \"pug, pug-dog\",\n  \"255\": \"Leonberg\",\n  \"256\": \"Newfoundland, Newfoundland dog\",\n  \"257\": \"Great Pyrenees\",\n  \"258\": \"Samoyed, Samoyede\",\n  \"259\": \"Pomeranian\",\n  \"260\": \"chow, chow chow\",\n  \"261\": \"keeshond\",\n  \"262\": \"Brabancon griffon\",\n  \"263\": \"Pembroke, Pembroke Welsh corgi\",\n  \"264\": \"Cardigan, Cardigan Welsh corgi\",\n  \"265\": \"toy poodle\",\n  \"266\": \"miniature poodle\",\n  \"267\": \"standard poodle\",\n  \"268\": \"Mexican hairless\",\n  \"269\": \"timber wolf, grey wolf, gray wolf, Canis lupus\",\n  \"270\": \"white wolf, Arctic wolf, Canis lupus tundrarum\",\n  \"271\": \"red wolf, maned wolf, Canis rufus, Canis niger\",\n  \"272\": \"coyote, prairie wolf, brush wolf, Canis latrans\",\n  \"273\": \"dingo, warrigal, warragal, Canis dingo\",\n  \"274\": \"dhole, Cuon alpinus\",\n  \"275\": \"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus\",\n  \"276\": \"hyena, hyaena\",\n  \"277\": \"red fox, Vulpes vulpes\",\n  \"278\": \"kit fox, Vulpes macrotis\",\n  \"279\": \"Arctic fox, white fox, Alopex lagopus\",\n  \"280\": \"grey fox, gray fox, Urocyon cinereoargenteus\",\n  \"281\": \"tabby, tabby cat\",\n  \"282\": \"tiger cat\",\n  \"283\": \"Persian cat\",\n  \"284\": \"Siamese cat, Siamese\",\n  \"285\": \"Egyptian cat\",\n  \"286\": \"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor\",\n  \"287\": \"lynx, catamount\",\n  \"288\": \"leopard, Panthera pardus\",\n  \"289\": \"snow leopard, ounce, Panthera uncia\",\n  \"290\": \"jaguar, panther, Panthera onca, Felis onca\",\n  \"291\": \"lion, king of beasts, Panthera leo\",\n  \"292\": \"tiger, Panthera tigris\",\n  \"293\": \"cheetah, chetah, Acinonyx jubatus\",\n  \"294\": \"brown bear, bruin, Ursus arctos\",\n  \"295\": \"American black bear, black bear, Ursus americanus, Euarctos americanus\",\n  \"296\": \"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus\",\n  \"297\": \"sloth bear, Melursus ursinus, Ursus ursinus\",\n  \"298\": \"mongoose\",\n  \"299\": \"meerkat, mierkat\",\n  \"300\": \"tiger beetle\",\n  \"301\": \"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle\",\n  \"302\": \"ground beetle, carabid beetle\",\n  \"303\": \"long-horned beetle, longicorn, longicorn beetle\",\n  \"304\": \"leaf beetle, chrysomelid\",\n  \"305\": \"dung beetle\",\n  \"306\": \"rhinoceros beetle\",\n  \"307\": \"weevil\",\n  \"308\": \"fly\",\n  \"309\": \"bee\",\n  \"310\": \"ant, emmet, pismire\",\n  \"311\": \"grasshopper, hopper\",\n  \"312\": \"cricket\",\n  \"313\": \"walking stick, walkingstick, stick insect\",\n  \"314\": \"cockroach, roach\",\n  \"315\": \"mantis, mantid\",\n  \"316\": \"cicada, cicala\",\n  \"317\": \"leafhopper\",\n  \"318\": \"lacewing, lacewing fly\",\n  \"319\": \"dragonfly, darning needle, devil\\\\\"s darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk\",\n  \"320\": \"damselfly\",\n  \"321\": \"admiral\",\n  \"322\": \"ringlet, ringlet butterfly\",\n  \"323\": \"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus\",\n  \"324\": \"cabbage butterfly\",\n  \"325\": \"sulphur butterfly, sulfur butterfly\",\n  \"326\": \"lycaenid, lycaenid butterfly\",\n  \"327\": \"starfish, sea star\",\n  \"328\": \"sea urchin\",\n  \"329\": \"sea cucumber, holothurian\",\n  \"330\": \"wood rabbit, cottontail, cottontail rabbit\",\n  \"331\": \"hare\",\n  \"332\": \"Angora, Angora rabbit\",\n  \"333\": \"hamster\",\n  \"334\": \"porcupine, hedgehog\",\n  \"335\": \"fox squirrel, eastern fox squirrel, Sciurus niger\",\n  \"336\": \"marmot\",\n  \"337\": \"beaver\",\n  \"338\": \"guinea pig, Cavia cobaya\",\n  \"339\": \"sorrel\",\n  \"340\": \"zebra\",\n  \"341\": \"hog, pig, grunter, squealer, Sus scrofa\",\n  \"342\": \"wild boar, boar, Sus scrofa\",\n  \"343\": \"warthog\",\n  \"344\": \"hippopotamus, hippo, river horse, Hippopotamus amphibius\",\n  \"345\": \"ox\",\n  \"346\": \"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis\",\n  \"347\": \"bison\",\n  \"348\": \"ram, tup\",\n  \"349\": \"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis\",\n  \"350\": \"ibex, Capra ibex\",\n  \"351\": \"hartebeest\",\n  \"352\": \"impala, Aepyceros melampus\",\n  \"353\": \"gazelle\",\n  \"354\": \"Arabian camel, dromedary, Camelus dromedarius\",\n  \"355\": \"llama\",\n  \"356\": \"weasel\",\n  \"357\": \"mink\",\n  \"358\": \"polecat, fitch, foulmart, foumart, Mustela putorius\",\n  \"359\": \"black-footed ferret, ferret, Mustela nigripes\",\n  \"360\": \"otter\",\n  \"361\": \"skunk, polecat, wood pussy\",\n  \"362\": \"badger\",\n  \"363\": \"armadillo\",\n  \"364\": \"three-toed sloth, ai, Bradypus tridactylus\",\n  \"365\": \"orangutan, orang, orangutang, Pongo pygmaeus\",\n  \"366\": \"gorilla, Gorilla gorilla\",\n  \"367\": \"chimpanzee, chimp, Pan troglodytes\",\n  \"368\": \"gibbon, Hylobates lar\",\n  \"369\": \"siamang, Hylobates syndactylus, Symphalangus syndactylus\",\n  \"370\": \"guenon, guenon monkey\",\n  \"371\": \"patas, hussar monkey, Erythrocebus patas\",\n  \"372\": \"baboon\",\n  \"373\": \"macaque\",\n  \"374\": \"langur\",\n  \"375\": \"colobus, colobus monkey\",\n  \"376\": \"proboscis monkey, Nasalis larvatus\",\n  \"377\": \"marmoset\",\n  \"378\": \"capuchin, ringtail, Cebus capucinus\",\n  \"379\": \"howler monkey, howler\",\n  \"380\": \"titi, titi monkey\",\n  \"381\": \"spider monkey, Ateles geoffroyi\",\n  \"382\": \"squirrel monkey, Saimiri sciureus\",\n  \"383\": \"Madagascar cat, ring-tailed lemur, Lemur catta\",\n  \"384\": \"indri, indris, Indri indri, Indri brevicaudatus\",\n  \"385\": \"Indian elephant, Elephas maximus\",\n  \"386\": \"African elephant, Loxodonta africana\",\n  \"387\": \"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens\",\n  \"388\": \"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca\",\n  \"389\": \"barracouta, snoek\",\n  \"390\": \"eel\",\n  \"391\": \"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch\",\n  \"392\": \"rock beauty, Holocanthus tricolor\",\n  \"393\": \"anemone fish\",\n  \"394\": \"sturgeon\",\n  \"395\": \"gar, garfish, garpike, billfish, Lepisosteus osseus\",\n  \"396\": \"lionfish\",\n  \"397\": \"puffer, pufferfish, blowfish, globefish\",\n  \"398\": \"abacus\",\n  \"399\": \"abaya\",\n  \"400\": \"academic gown, academic robe, judge's robe\",\n  \"401\": \"accordion, piano accordion, squeeze box\",\n  \"402\": \"acoustic guitar\",\n  \"403\": \"aircraft carrier, carrier, flattop, attack aircraft carrier\",\n  \"404\": \"airliner\",\n  \"405\": \"airship, dirigible\",\n  \"406\": \"altar\",\n  \"407\": \"ambulance\",\n  \"408\": \"amphibian, amphibious vehicle\",\n  \"409\": \"analog clock\",\n  \"410\": \"apiary, bee house\",\n  \"411\": \"apron\",\n  \"412\": \"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin\",\n  \"413\": \"assault rifle, assault gun\",\n  \"414\": \"backpack, back pack, knapsack, packsack, rucksack, haversack\",\n  \"415\": \"bakery, bakeshop, bakehouse\",\n  \"416\": \"balance beam, beam\",\n  \"417\": \"balloon\",\n  \"418\": \"ballpoint, ballpoint pen, ballpen, Biro\",\n  \"419\": \"Band Aid\",\n  \"420\": \"banjo\",\n  \"421\": \"bannister, banister, balustrade, balusters, handrail\",\n  \"422\": \"barbell\",\n  \"423\": \"barber chair\",\n  \"424\": \"barbershop\",\n  \"425\": \"barn\",\n  \"426\": \"barometer\",\n  \"427\": \"barrel, cask\",\n  \"428\": \"barrow, garden cart, lawn cart, wheelbarrow\",\n  \"429\": \"baseball\",\n  \"430\": \"basketball\",\n  \"431\": \"bassinet\",\n  \"432\": \"bassoon\",\n  \"433\": \"bathing cap, swimming cap\",\n  \"434\": \"bath towel\",\n  \"435\": \"bathtub, bathing tub, bath, tub\",\n  \"436\": \"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon\",\n  \"437\": \"beacon, lighthouse, beacon light, pharos\",\n  \"438\": \"beaker\",\n  \"439\": \"bearskin, busby, shako\",\n  \"440\": \"beer bottle\",\n  \"441\": \"beer glass\",\n  \"442\": \"bell cote, bell cot\",\n  \"443\": \"bib\",\n  \"444\": \"bicycle-built-for-two, tandem bicycle, tandem\",\n  \"445\": \"bikini, two-piece\",\n  \"446\": \"binder, ring-binder\",\n  \"447\": \"binoculars, field glasses, opera glasses\",\n  \"448\": \"birdhouse\",\n  \"449\": \"boathouse\",\n  \"450\": \"bobsled, bobsleigh, bob\",\n  \"451\": \"bolo tie, bolo, bola tie, bola\",\n  \"452\": \"bonnet, poke bonnet\",\n  \"453\": \"bookcase\",\n  \"454\": \"bookshop, bookstore, bookstall\",\n  \"455\": \"bottlecap\",\n  \"456\": \"bow\",\n  \"457\": \"bow tie, bow-tie, bowtie\",\n  \"458\": \"brass, memorial tablet, plaque\",\n  \"459\": \"brassiere, bra, bandeau\",\n  \"460\": \"breakwater, groin, groyne, mole, bulwark, seawall, jetty\",\n  \"461\": \"breastplate, aegis, egis\",\n  \"462\": \"broom\",\n  \"463\": \"bucket, pail\",\n  \"464\": \"buckle\",\n  \"465\": \"bulletproof vest\",\n  \"466\": \"bullet train, bullet\",\n  \"467\": \"butcher shop, meat market\",\n  \"468\": \"cab, hack, taxi, taxicab\",\n  \"469\": \"caldron, cauldron\",\n  \"470\": \"candle, taper, wax light\",\n  \"471\": \"cannon\",\n  \"472\": \"canoe\",\n  \"473\": \"can opener, tin opener\",\n  \"474\": \"cardigan\",\n  \"475\": \"car mirror\",\n  \"476\": \"carousel, carrousel, merry-go-round, roundabout, whirligig\",\n  \"477\": \"carpenter\\\\\"s kit, tool kit\",\n  \"478\": \"carton\",\n  \"479\": \"car wheel\",\n  \"480\": \"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM\",\n  \"481\": \"cassette\",\n  \"482\": \"cassette player\",\n  \"483\": \"castle\",\n  \"484\": \"catamaran\",\n  \"485\": \"CD player\",\n  \"486\": \"cello, violoncello\",\n  \"487\": \"cellular telephone, cellular phone, cellphone, cell, mobile phone\",\n  \"488\": \"chain\",\n  \"489\": \"chainlink fence\",\n  \"490\": \"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour\",\n  \"491\": \"chain saw, chainsaw\",\n  \"492\": \"chest\",\n  \"493\": \"chiffonier, commode\",\n  \"494\": \"chime, bell, gong\",\n  \"495\": \"china cabinet, china closet\",\n  \"496\": \"Christmas stocking\",\n  \"497\": \"church, church building\",\n  \"498\": \"cinema, movie theater, movie theatre, movie house, picture palace\",\n  \"499\": \"cleaver, meat cleaver, chopper\",\n  \"500\": \"cliff dwelling\",\n  \"501\": \"cloak\",\n  \"502\": \"clog, geta, patten, sabot\",\n  \"503\": \"cocktail shaker\",\n  \"504\": \"coffee mug\",\n  \"505\": \"coffeepot\",\n  \"506\": \"coil, spiral, volute, whorl, helix\",\n  \"507\": \"combination lock\",\n  \"508\": \"computer keyboard, keypad\",\n  \"509\": \"confectionery, confectionary, candy store\",\n  \"510\": \"container ship, containership, container vessel\",\n  \"511\": \"convertible\",\n  \"512\": \"corkscrew, bottle screw\",\n  \"513\": \"cornet, horn, trumpet, trump\",\n  \"514\": \"cowboy boot\",\n  \"515\": \"cowboy hat, ten-gallon hat\",\n  \"516\": \"cradle\",\n  \"517\": \"crane\",\n  \"518\": \"crash helmet\",\n  \"519\": \"crate\",\n  \"520\": \"crib, cot\",\n  \"521\": \"Crock Pot\",\n  \"522\": \"croquet ball\",\n  \"523\": \"crutch\",\n  \"524\": \"cuirass\",\n  \"525\": \"dam, dike, dyke\",\n  \"526\": \"desk\",\n  \"527\": \"desktop computer\",\n  \"528\": \"dial telephone, dial phone\",\n  \"529\": \"diaper, nappy, napkin\",\n  \"530\": \"digital clock\",\n  \"531\": \"digital watch\",\n  \"532\": \"dining table, board\",\n  \"533\": \"dishrag, dishcloth\",\n  \"534\": \"dishwasher, dish washer, dishwashing machine\",\n  \"535\": \"disk brake, disc brake\",\n  \"536\": \"dock, dockage, docking facility\",\n  \"537\": \"dogsled, dog sled, dog sleigh\",\n  \"538\": \"dome\",\n  \"539\": \"doormat, welcome mat\",\n  \"540\": \"drilling platform, offshore rig\",\n  \"541\": \"drum, membranophone, tympan\",\n  \"542\": \"drumstick\",\n  \"543\": \"dumbbell\",\n  \"544\": \"Dutch oven\",\n  \"545\": \"electric fan, blower\",\n  \"546\": \"electric guitar\",\n  \"547\": \"electric locomotive\",\n  \"548\": \"entertainment center\",\n  \"549\": \"envelope\",\n  \"550\": \"espresso maker\",\n  \"551\": \"face powder\",\n  \"552\": \"feather boa, boa\",\n  \"553\": \"file, file cabinet, filing cabinet\",\n  \"554\": \"fireboat\",\n  \"555\": \"fire engine, fire truck\",\n  \"556\": \"fire screen, fireguard\",\n  \"557\": \"flagpole, flagstaff\",\n  \"558\": \"flute, transverse flute\",\n  \"559\": \"folding chair\",\n  \"560\": \"football helmet\",\n  \"561\": \"forklift\",\n  \"562\": \"fountain\",\n  \"563\": \"fountain pen\",\n  \"564\": \"four-poster\",\n  \"565\": \"freight car\",\n  \"566\": \"French horn, horn\",\n  \"567\": \"frying pan, frypan, skillet\",\n  \"568\": \"fur coat\",\n  \"569\": \"garbage truck, dustcart\",\n  \"570\": \"gasmask, respirator, gas helmet\",\n  \"571\": \"gas pump, gasoline pump, petrol pump, island dispenser\",\n  \"572\": \"goblet\",\n  \"573\": \"go-kart\",\n  \"574\": \"golf ball\",\n  \"575\": \"golfcart, golf cart\",\n  \"576\": \"gondola\",\n  \"577\": \"gong, tam-tam\",\n  \"578\": \"gown\",\n  \"579\": \"grand piano, grand\",\n  \"580\": \"greenhouse, nursery, glasshouse\",\n  \"581\": \"grille, radiator grille\",\n  \"582\": \"grocery store, grocery, food market, market\",\n  \"583\": \"guillotine\",\n  \"584\": \"hair slide\",\n  \"585\": \"hair spray\",\n  \"586\": \"half track\",\n  \"587\": \"hammer\",\n  \"588\": \"hamper\",\n  \"589\": \"hand blower, blow dryer, blow drier, hair dryer, hair drier\",\n  \"590\": \"hand-held computer, hand-held microcomputer\",\n  \"591\": \"handkerchief, hankie, hanky, hankey\",\n  \"592\": \"hard disc, hard disk, fixed disk\",\n  \"593\": \"harmonica, mouth organ, harp, mouth harp\",\n  \"594\": \"harp\",\n  \"595\": \"harvester, reaper\",\n  \"596\": \"hatchet\",\n  \"597\": \"holster\",\n  \"598\": \"home theater, home theatre\",\n  \"599\": \"honeycomb\",\n  \"600\": \"hook, claw\",\n  \"601\": \"hoopskirt, crinoline\",\n  \"602\": \"horizontal bar, high bar\",\n  \"603\": \"horse cart, horse-cart\",\n  \"604\": \"hourglass\",\n  \"605\": \"iPod\",\n  \"606\": \"iron, smoothing iron\",\n  \"607\": \"jack-o' ,-lantern\",\n  \"608\": \"jean, blue jean, denim\",\n  \"609\": \"jeep, landrover\",\n  \"610\": \"jersey, T-shirt, tee shirt\",\n  \"611\": \"jigsaw puzzle\",\n  \"612\": \"jinrikisha, ricksha, rickshaw\",\n  \"613\": \"joystick\",\n  \"614\": \"kimono\",\n  \"615\": \"knee pad\",\n  \"616\": \"knot\",\n  \"617\": \"lab coat, laboratory coat\",\n  \"618\": \"ladle\",\n  \"619\": \"lampshade, lamp shade\",\n  \"620\": \"laptop, laptop computer\",\n  \"621\": \"lawn mower, mower\",\n  \"622\": \"lens cap, lens cover\",\n  \"623\": \"letter opener, paper knife, paperknife\",\n  \"624\": \"library\",\n  \"625\": \"lifeboat\",\n  \"626\": \"lighter, light, igniter, ignitor\",\n  \"627\": \"limousine, limo\",\n  \"628\": \"liner, ocean liner\",\n  \"629\": \"lipstick, lip rouge\",\n  \"630\": \"Loafer\",\n  \"631\": \"lotion\",\n  \"632\": \"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system\",\n  \"633\": \"loupe, jeweler\\\\\"s loupe\",\n  \"634\": \"lumbermill, sawmill\",\n  \"635\": \"magnetic compass\",\n  \"636\": \"mailbag, postbag\",\n  \"637\": \"mailbox, letter box\",\n  \"638\": \"maillot\",\n  \"639\": \"maillot, tank suit\",\n  \"640\": \"manhole cover\",\n  \"641\": \"maraca\",\n  \"642\": \"marimba, xylophone\",\n  \"643\": \"mask\",\n  \"644\": \"matchstick\",\n  \"645\": \"maypole\",\n  \"646\": \"maze, labyrinth\",\n  \"647\": \"measuring cup\",\n  \"648\": \"medicine chest, medicine cabinet\",\n  \"649\": \"megalith, megalithic structure\",\n  \"650\": \"microphone, mike\",\n  \"651\": \"microwave, microwave oven\",\n  \"652\": \"military uniform\",\n  \"653\": \"milk can\",\n  \"654\": \"minibus\",\n  \"655\": \"miniskirt, mini\",\n  \"656\": \"minivan\",\n  \"657\": \"missile\",\n  \"658\": \"mitten\",\n  \"659\": \"mixing bowl\",\n  \"660\": \"mobile home, manufactured home\",\n  \"661\": \"Model T\",\n  \"662\": \"modem\",\n  \"663\": \"monastery\",\n  \"664\": \"monitor\",\n  \"665\": \"moped\",\n  \"666\": \"mortar\",\n  \"667\": \"mortarboard\",\n  \"668\": \"mosque\",\n  \"669\": \"mosquito net\",\n  \"670\": \"motor scooter, scooter\",\n  \"671\": \"mountain bike, all-terrain bike, off-roader\",\n  \"672\": \"mountain tent\",\n  \"673\": \"mouse, computer mouse\",\n  \"674\": \"mousetrap\",\n  \"675\": \"moving van\",\n  \"676\": \"muzzle\",\n  \"677\": \"nail\",\n  \"678\": \"neck brace\",\n  \"679\": \"necklace\",\n  \"680\": \"nipple\",\n  \"681\": \"notebook, notebook computer\",\n  \"682\": \"obelisk\",\n  \"683\": \"oboe, hautboy, hautbois\",\n  \"684\": \"ocarina, sweet potato\",\n  \"685\": \"odometer, hodometer, mileometer, milometer\",\n  \"686\": \"oil filter\",\n  \"687\": \"organ, pipe organ\",\n  \"688\": \"oscilloscope, scope, cathode-ray oscilloscope, CRO\",\n  \"689\": \"overskirt\",\n  \"690\": \"oxcart\",\n  \"691\": \"oxygen mask\",\n  \"692\": \"packet\",\n  \"693\": \"paddle, boat paddle\",\n  \"694\": \"paddlewheel, paddle wheel\",\n  \"695\": \"padlock\",\n  \"696\": \"paintbrush\",\n  \"697\": \"pajama, pyjama, pj's, jammies\",\n  \"698\": \"palace\",\n  \"699\": \"panpipe, pandean pipe, syrinx\",\n  \"700\": \"paper towel\",\n  \"701\": \"parachute, chute\",\n  \"702\": \"parallel bars, bars\",\n  \"703\": \"park bench\",\n  \"704\": \"parking meter\",\n  \"705\": \"passenger car, coach, carriage\",\n  \"706\": \"patio, terrace\",\n  \"707\": \"pay-phone, pay-station\",\n  \"708\": \"pedestal, plinth, footstall\",\n  \"709\": \"pencil box, pencil case\",\n  \"710\": \"pencil sharpener\",\n  \"711\": \"perfume, essence\",\n  \"712\": \"Petri dish\",\n  \"713\": \"photocopier\",\n  \"714\": \"pick, plectrum, plectron\",\n  \"715\": \"pickelhaube\",\n  \"716\": \"picket fence, paling\",\n  \"717\": \"pickup, pickup truck\",\n  \"718\": \"pier\",\n  \"719\": \"piggy bank, penny bank\",\n  \"720\": \"pill bottle\",\n  \"721\": \"pillow\",\n  \"722\": \"ping-pong ball\",\n  \"723\": \"pinwheel\",\n  \"724\": \"pirate, pirate ship\",\n  \"725\": \"pitcher, ewer\",\n  \"726\": \"plane, carpenter\\\\\"s plane, woodworking plane\",\n  \"727\": \"planetarium\",\n  \"728\": \"plastic bag\",\n  \"729\": \"plate rack\",\n  \"730\": \"plow, plough\",\n  \"731\": \"plunger, plumber's helper\",\n  \"732\": \"Polaroid camera, Polaroid Land camera\",\n  \"733\": \"pole\",\n  \"734\": \"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria\",\n  \"735\": \"poncho\",\n  \"736\": \"pool table, billiard table, snooker table\",\n  \"737\": \"pop bottle, soda bottle\",\n  \"738\": \"pot, flowerpot\",\n  \"739\": \"potter's wheel\",\n  \"740\": \"power drill\",\n  \"741\": \"prayer rug, prayer mat\",\n  \"742\": \"printer\",\n  \"743\": \"prison, prison house\",\n  \"744\": \"projectile, missile\",\n  \"745\": \"projector\",\n  \"746\": \"puck, hockey puck\",\n  \"747\": \"punching bag, punch bag, punching ball, punchball\",\n  \"748\": \"purse\",\n  \"749\": \"quill, quill pen\",\n  \"750\": \"quilt, comforter, comfort, puff\",\n  \"751\": \"racer, race car, racing car\",\n  \"752\": \"racket, racquet\",\n  \"753\": \"radiator\",\n  \"754\": \"radio, wireless\",\n  \"755\": \"radio telescope, radio reflector\",\n  \"756\": \"rain barrel\",\n  \"757\": \"recreational vehicle, RV, R.V.\",\n  \"758\": \"reel\",\n  \"759\": \"reflex camera\",\n  \"760\": \"refrigerator, icebox\",\n  \"761\": \"remote control, remote\",\n  \"762\": \"restaurant, eating house, eating place, eatery\",\n  \"763\": \"revolver, six-gun, six-shooter\",\n  \"764\": \"rifle\",\n  \"765\": \"rocking chair, rocker\",\n  \"766\": \"rotisserie\",\n  \"767\": \"rubber eraser, rubber, pencil eraser\",\n  \"768\": \"rugby ball\",\n  \"769\": \"rule, ruler\",\n  \"770\": \"running shoe\",\n  \"771\": \"safe\",\n  \"772\": \"safety pin\",\n  \"773\": \"saltshaker, salt shaker\",\n  \"774\": \"sandal\",\n  \"775\": \"sarong\",\n  \"776\": \"sax, saxophone\",\n  \"777\": \"scabbard\",\n  \"778\": \"scale, weighing machine\",\n  \"779\": \"school bus\",\n  \"780\": \"schooner\",\n  \"781\": \"scoreboard\",\n  \"782\": \"screen, CRT screen\",\n  \"783\": \"screw\",\n  \"784\": \"screwdriver\",\n  \"785\": \"seat belt, seatbelt\",\n  \"786\": \"sewing machine\",\n  \"787\": \"shield, buckler\",\n  \"788\": \"shoe shop, shoe-shop, shoe store\",\n  \"789\": \"shoji\",\n  \"790\": \"shopping basket\",\n  \"791\": \"shopping cart\",\n  \"792\": \"shovel\",\n  \"793\": \"shower cap\",\n  \"794\": \"shower curtain\",\n  \"795\": \"ski\",\n  \"796\": \"ski mask\",\n  \"797\": \"sleeping bag\",\n  \"798\": \"slide rule, slipstick\",\n  \"799\": \"sliding door\",\n  \"800\": \"slot, one-armed bandit\",\n  \"801\": \"snorkel\",\n  \"802\": \"snowmobile\",\n  \"803\": \"snowplow, snowplough\",\n  \"804\": \"soap dispenser\",\n  \"805\": \"soccer ball\",\n  \"806\": \"sock\",\n  \"807\": \"solar dish, solar collector, solar furnace\",\n  \"808\": \"sombrero\",\n  \"809\": \"soup bowl\",\n  \"810\": \"space bar\",\n  \"811\": \"space heater\",\n  \"812\": \"space shuttle\",\n  \"813\": \"spatula\",\n  \"814\": \"speedboat\",\n  \"815\": \"spider web, spider's web\",\n  \"816\": \"spindle\",\n  \"817\": \"sports car, sport car\",\n  \"818\": \"spotlight, spot\",\n  \"819\": \"stage\",\n  \"820\": \"steam locomotive\",\n  \"821\": \"steel arch bridge\",\n  \"822\": \"steel drum\",\n  \"823\": \"stethoscope\",\n  \"824\": \"stole\",\n  \"825\": \"stone wall\",\n  \"826\": \"stopwatch, stop watch\",\n  \"827\": \"stove\",\n  \"828\": \"strainer\",\n  \"829\": \"streetcar, tram, tramcar, trolley, trolley car\",\n  \"830\": \"stretcher\",\n  \"831\": \"studio couch, day bed\",\n  \"832\": \"stupa, tope\",\n  \"833\": \"submarine, pigboat, sub, U-boat\",\n  \"834\": \"suit, suit of clothes\",\n  \"835\": \"sundial\",\n  \"836\": \"sunglass\",\n  \"837\": \"sunglasses, dark glasses, shades\",\n  \"838\": \"sunscreen, sunblock, sun blocker\",\n  \"839\": \"suspension bridge\",\n  \"840\": \"swab, swob, mop\",\n  \"841\": \"sweatshirt\",\n  \"842\": \"swimming trunks, bathing trunks\",\n  \"843\": \"swing\",\n  \"844\": \"switch, electric switch, electrical switch\",\n  \"845\": \"syringe\",\n  \"846\": \"table lamp\",\n  \"847\": \"tank, army tank, armored combat vehicle, armoured combat vehicle\",\n  \"848\": \"tape player\",\n  \"849\": \"teapot\",\n  \"850\": \"teddy, teddy bear\",\n  \"851\": \"television, television system\",\n  \"852\": \"tennis ball\",\n  \"853\": \"thatch, thatched roof\",\n  \"854\": \"theater curtain, theatre curtain\",\n  \"855\": \"thimble\",\n  \"856\": \"thresher, thrasher, threshing machine\",\n  \"857\": \"throne\",\n  \"858\": \"tile roof\",\n  \"859\": \"toaster\",\n  \"860\": \"tobacco shop, tobacconist shop, tobacconist\",\n  \"861\": \"toilet seat\",\n  \"862\": \"torch\",\n  \"863\": \"totem pole\",\n  \"864\": \"tow truck, tow car, wrecker\",\n  \"865\": \"toyshop\",\n  \"866\": \"tractor\",\n  \"867\": \"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi\",\n  \"868\": \"tray\",\n  \"869\": \"trench coat\",\n  \"870\": \"tricycle, trike, velocipede\",\n  \"871\": \"trimaran\",\n  \"872\": \"tripod\",\n  \"873\": \"triumphal arch\",\n  \"874\": \"trolleybus, trolley coach, trackless trolley\",\n  \"875\": \"trombone\",\n  \"876\": \"tub, vat\",\n  \"877\": \"turnstile\",\n  \"878\": \"typewriter keyboard\",\n  \"879\": \"umbrella\",\n  \"880\": \"unicycle, monocycle\",\n  \"881\": \"upright, upright piano\",\n  \"882\": \"vacuum, vacuum cleaner\",\n  \"883\": \"vase\",\n  \"884\": \"vault\",\n  \"885\": \"velvet\",\n  \"886\": \"vending machine\",\n  \"887\": \"vestment\",\n  \"888\": \"viaduct\",\n  \"889\": \"violin, fiddle\",\n  \"890\": \"volleyball\",\n  \"891\": \"waffle iron\",\n  \"892\": \"wall clock\",\n  \"893\": \"wallet, billfold, notecase, pocketbook\",\n  \"894\": \"wardrobe, closet, press\",\n  \"895\": \"warplane, military plane\",\n  \"896\": \"washbasin, handbasin, washbowl, lavabo, wash-hand basin\",\n  \"897\": \"washer, automatic washer, washing machine\",\n  \"898\": \"water bottle\",\n  \"899\": \"water jug\",\n  \"900\": \"water tower\",\n  \"901\": \"whiskey jug\",\n  \"902\": \"whistle\",\n  \"903\": \"wig\",\n  \"904\": \"window screen\",\n  \"905\": \"window shade\",\n  \"906\": \"Windsor tie\",\n  \"907\": \"wine bottle\",\n  \"908\": \"wing\",\n  \"909\": \"wok\",\n  \"910\": \"wooden spoon\",\n  \"911\": \"wool, woolen, woollen\",\n  \"912\": \"worm fence, snake fence, snake-rail fence, Virginia fence\",\n  \"913\": \"wreck\",\n  \"914\": \"yawl\",\n  \"915\": \"yurt\",\n  \"916\": \"web site, website, internet site, site\",\n  \"917\": \"comic book\",\n  \"918\": \"crossword puzzle, crossword\",\n  \"919\": \"street sign\",\n  \"920\": \"traffic light, traffic signal, stoplight\",\n  \"921\": \"book jacket, dust cover, dust jacket, dust wrapper\",\n  \"922\": \"menu\",\n  \"923\": \"plate\",\n  \"924\": \"guacamole\",\n  \"925\": \"consomme\",\n  \"926\": \"hot pot, hotpot\",\n  \"927\": \"trifle\",\n  \"928\": \"ice cream, icecream\",\n  \"929\": \"ice lolly, lolly, lollipop, popsicle\",\n  \"930\": \"French loaf\",\n  \"931\": \"bagel, beigel\",\n  \"932\": \"pretzel\",\n  \"933\": \"cheeseburger\",\n  \"934\": \"hotdog, hot dog, red hot\",\n  \"935\": \"mashed potato\",\n  \"936\": \"head cabbage\",\n  \"937\": \"broccoli\",\n  \"938\": \"cauliflower\",\n  \"939\": \"zucchini, courgette\",\n  \"940\": \"spaghetti squash\",\n  \"941\": \"acorn squash\",\n  \"942\": \"butternut squash\",\n  \"943\": \"cucumber, cuke\",\n  \"944\": \"artichoke, globe artichoke\",\n  \"945\": \"bell pepper\",\n  \"946\": \"cardoon\",\n  \"947\": \"mushroom\",\n  \"948\": \"Granny Smith\",\n  \"949\": \"strawberry\",\n  \"950\": \"orange\",\n  \"951\": \"lemon\",\n  \"952\": \"fig\",\n  \"953\": \"pineapple, ananas\",\n  \"954\": \"banana\",\n  \"955\": \"jackfruit, jak, jack\",\n  \"956\": \"custard apple\",\n  \"957\": \"pomegranate\",\n  \"958\": \"hay\",\n  \"959\": \"carbonara\",\n  \"960\": \"chocolate sauce, chocolate syrup\",\n  \"961\": \"dough\",\n  \"962\": \"meat loaf, meatloaf\",\n  \"963\": \"pizza, pizza pie\",\n  \"964\": \"potpie\",\n  \"965\": \"burrito\",\n  \"966\": \"red wine\",\n  \"967\": \"espresso\",\n  \"968\": \"cup\",\n  \"969\": \"eggnog\",\n  \"970\": \"alp\",\n  \"971\": \"bubble\",\n  \"972\": \"cliff, drop, drop-off\",\n  \"973\": \"coral reef\",\n  \"974\": \"geyser\",\n  \"975\": \"lakeside, lakeshore\",\n  \"976\": \"promontory, headland, head, foreland\",\n  \"977\": \"sandbar, sand bar\",\n  \"978\": \"seashore, coast, seacoast, sea-coast\",\n  \"979\": \"valley, vale\",\n  \"980\": \"volcano\",\n  \"981\": \"ballplayer, baseball player\",\n  \"982\": \"groom, bridegroom\",\n  \"983\": \"scuba diver\",\n  \"984\": \"rapeseed\",\n  \"985\": \"daisy\",\n  \"986\": \"yellow lady\\\\\"s slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum\",\n  \"987\": \"corn\",\n  \"988\": \"acorn\",\n  \"989\": \"hip, rose hip, rosehip\",\n  \"990\": \"buckeye, horse chestnut, conker\",\n  \"991\": \"coral fungus\",\n  \"992\": \"agaric\",\n  \"993\": \"gyromitra\",\n  \"994\": \"stinkhorn, carrion fungus\",\n  \"995\": \"earthstar\",\n  \"996\": \"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa\",\n  \"997\": \"bolete\",\n  \"998\": \"ear, spike, capitulum\",\n  \"999\": \"toilet tissue, toilet paper, bathroom tissue\"\n}\n`\n","import CnnModelLoader from \"../../../../../utils/cnn-model-loader\"\nimport {ClassNames} from \"../../../../interfaces/class-names\"\nimport * as tf from \"@tensorflow/tfjs\"\nimport {NotificationTypes, TensorFlowHubModelNotification} from \"../../../../interfaces/notifications\"\nimport {IMAGE_NET_CLASSES} from \"./image-net-class-names\"\n\nexport class TensorHubModelLoader extends CnnModelLoader {\n\n    private cnnModelUrl: string\n    private dataset: string\n    private datasets = {\n        [\"imagenet-ilsvrc-2012-cls\"]: JSON.parse(IMAGE_NET_CLASSES)\n    }\n\n    constructor(notificaton: TensorFlowHubModelNotification) {\n        super(notificaton)\n        this.cnnModelUrl = notificaton.cnnModelHub.url\n        this.dataset = notificaton.cnnModelHub.dataset\n\n    }\n\n    async getSettings(): Promise<TensorFlowHubModelNotification> {\n        const classNames: ClassNames = this.datasets[this.dataset]\n        if (!classNames) {\n            return Promise.reject(`not support current dataset ${this.dataset}`)\n        }\n\n        const settings: TensorFlowHubModelNotification = {\n            ...this.notification,\n            classNames,\n            cnnModelHub: (this.notification as TensorFlowHubModelNotification).cnnModelHub,\n            type: NotificationTypes.TensorFlowHubModelNotification\n        }\n\n        return Promise.resolve(settings)\n\n\n    }\n\n    async getCnnModel(): Promise<tf.GraphModel> {\n        console.log(\"Loading model...\")\n\n        const startTime = performance.now()\n\n        const cnnModel = await tf.loadGraphModel(this.cnnModelUrl, {fromTFHub: true})\n\n        console.log(`Model loaded  in ${Math.floor(performance.now() - startTime)} ms...`)\n\n        return cnnModel\n\n    }\n}\n","import * as tf from \"@tensorflow/tfjs\"\nimport {ClassNames} from \"../../interfaces/class-names\"\n\nimport {\n    CnnModelSettingNotification,\n    FilterNotification,\n    ImageNotification,\n    Notification,\n    NotificationTypes\n} from \"../../interfaces/notifications\"\n\nimport Module from \"../../../utils/module\"\n\n\nexport class ConvolutionalNeuralNetwork extends Module<Notification, Notification> {\n\n    private classNames: ClassNames\n    private model: tf.GraphModel\n    private enables: Array<boolean>\n    private predict = {[0]: \"not show\", [1]: \"show\"}\n\n\n    constructor() {\n        super()\n\n    }\n\n    protected error(e): void {\n\n    }\n\n    protected complete(): void {\n\n    }\n\n    protected next(message: Notification) {\n\n        if (message.type === NotificationTypes.ImageNotification) {\n            return this.imageNotification(message as ImageNotification)\n        }\n\n        if (message.type === NotificationTypes.CnnModelSettingNotification) {\n            return this.settingsNotification(message as CnnModelSettingNotification)\n        }\n\n    }\n\n    private imageNotification(notification: ImageNotification) {\n\n        if (this.dontNeedToPredict()) {\n            this.notifyToShow(notification)\n        } else {\n            this.startToPredict(notification.img)\n                .then((pred: string) => this.notifyPredict(pred, notification))\n                .catch(() => this.notifyToShow(notification))\n        }\n\n    }\n\n    private dontNeedToPredict(): boolean {\n        if (!this.model) {\n            return true\n        }\n\n        return this.enables.reduce(((previousValue, currentValue) => previousValue && currentValue))\n\n    }\n\n    private notifyToShow(notification: ImageNotification) {\n        const outputMessage: FilterNotification = {\n            type: NotificationTypes.FilterNotification,\n            id: notification.id,\n            predict: this.predict[1],\n            imgSrc: notification.img.src\n        }\n\n        this.subject.next(outputMessage)\n\n    }\n\n    private notifyPredict(pred: string, notification: ImageNotification) {\n        console.log(\"CNN pred:\", pred)\n        const filterNotification: FilterNotification = {\n            type: NotificationTypes.FilterNotification,\n            id: notification.id,\n            predict: pred,\n            imgSrc: notification.img.src\n        }\n        this.subject.next(filterNotification)\n    }\n\n\n    private settingsNotification(message: CnnModelSettingNotification) {\n        if (message.cnnModel) {\n            this.model = message.cnnModel\n        }\n        if (message.classNames) {\n            this.classNames = message.classNames\n        }\n        if (message.enables) {\n            this.enables = message.enables\n        }\n\n\n    }\n\n\n    private async getTheBestClass(logIts: tf.Tensor): Promise<string> {\n        const {indices} = tf.topk(logIts, 1, true)\n        const argMax = await indices.data()\n\n        console.log(this.classNames[argMax[0]])\n        const pred = this.enables[argMax[0]] ? 1 : 0\n        return this.predict[pred]\n    }\n\n\n    protected async startToPredict(image: HTMLImageElement): Promise<string> {\n        return new Promise<string>(async (resolve, reject) => {\n            try {\n                const logIts = tf.tidy(this.tinyFunction.bind(this, image))\n                resolve(this.getTheBestClass(logIts as tf.Tensor))\n            } catch (e) {\n                // console.error(\"Unable to execute tinyFunction\", e)\n                reject(e)\n            }\n\n\n        })\n    }\n\n\n    private tinyFunction(img: HTMLImageElement): tf.Tensor | tf.Tensor[] | tf.NamedTensorMap {\n\n        const shape = this.acceptableInputShape(this.model.inputs[0].shape)\n        const image = tf.browser.fromPixels(img).toFloat().resizeBilinear([shape[1], shape[2]])\n        const normalized = image.div(tf.scalar(255.0))\n\n        const batched = normalized.reshape([1, ...shape.slice(1, shape.length)])\n\n        return this.model.predict(batched)\n\n\n    }\n\n    /*\n por algum motivo alguns modelos do tensorHub possuem um input shape incoerente como: [-1,0,0,3],\n mas sabe-se que a priori todos os modelos do tensorHub  tem o mesmo input shape que é [1, 224, 224, 3]\n  */\n\n    private acceptableInputShape(inputShape: Array<number>): Array<number> {\n        const defaultShapeFromTensorHub = [1, 224, 224, 3]\n\n        if (inputShape === undefined) {\n            return defaultShapeFromTensorHub\n        }\n\n        if (inputShape.length !== 4) {\n            return defaultShapeFromTensorHub\n        }\n\n        if (inputShape[1] <= 0 || inputShape[2] <= 0) {\n            return defaultShapeFromTensorHub\n        }\n\n        return inputShape\n\n    }\n}\n\n","import {ImageNotification, Notification, NotificationTypes} from \"../../interfaces/notifications\"\nimport Module from \"../../../utils/module\"\nimport {TimeLogger} from \"../../../utils/logger/time-logger\"\n\n\nexport class LoadImage extends Module<Notification, Notification> {\n\n    constructor() {\n        super()\n    }\n\n    private static noTabError = new Error(\"Tab Not found\")\n    private shape = {min: 40}\n\n\n\n    private tabs: { [key: string]: string } = {}\n\n    private callbacks = {\n        [NotificationTypes.ImageSourceNotification]: this.imageSourceNotification.bind(this),\n    }\n\n    error(e): void {\n\n    }\n\n    complete(): void {\n\n    }\n\n    next(notification: Notification) {\n\n        if (this.callbacks[notification.type]) {\n            this.callbacks[notification.type](notification)\n        }\n\n    }\n\n    private imageSourceNotification(notification: Notification) {\n        if (notification.id === undefined) {\n            throw LoadImage.noTabError\n        }\n        if (notification.message === undefined) {\n            return\n        }\n        const imageSource = notification.message\n\n        this.createDomElement(imageSource)\n        this.linkSourceToTab(imageSource, notification.id)\n    }\n\n\n    private createDomElement(src: string) {\n        if (!src) {\n            return undefined\n        }\n\n        const img = document.createElement(\"img\")\n        img.addEventListener(\"error\", this.onError.bind(this))\n        img.addEventListener(\"load\", this.onLoad.bind(this))\n        img.src = src\n\n\n    }\n\n    private linkSourceToTab(src: string, tabUUID: string) {\n        this.tabs[src] = tabUUID\n    }\n\n    private onError(event) {\n        delete this.tabs[event.target.src]\n\n    }\n\n    private onLoad(event) {\n        const imgTarget = (event.target as HTMLImageElement)\n\n        if ((imgTarget.height && imgTarget.height >= this.shape.min) || (imgTarget.width && imgTarget.width >= this.shape.min)) {\n            this.notify(imgTarget)\n            return\n        }\n\n    }\n\n    private getTabFromSource(src: string): string {\n        const tab = this.tabs[src]\n        if (!tab) {\n            throw Error(\"Tab Not found\")\n        }\n\n        return this.tabs[src]\n    }\n\n    notify(img: HTMLImageElement) {\n        const id = this.getTabFromSource(img.src)\n\n        this.subject.next({type: NotificationTypes.ImageNotification, id, img} as ImageNotification)\n        delete this.tabs[img.src]\n    }\n\n}\n","import {ClassNames} from \"./class-names\"\nimport * as tf from \"@tensorflow/tfjs\"\nimport {TensorflowHubModel} from \"./tensorflow-hub-model\"\n\nexport enum NotificationTypes {\n    Notification,\n    ImageSourceNotification,\n    ClassNameUrlsNotification,\n    ImageNotification,\n    FilterNotification,\n    ContentNotification,\n    CnnModelSettingNotification,\n    TensorFlowHubModelNotification,\n    LocalModelInputNotification,\n    ImageDataNotification,\n    ImageUrlsNotification,\n    ImageByURINotification\n}\n\nexport interface Notification {\n    id?: string\n    type: number\n    message?: string\n}\n\nexport interface ImageNotification extends Notification {\n    type: NotificationTypes.ImageNotification\n    img: HTMLImageElement,\n}\n\n\nexport interface FilterNotification extends Notification {\n    type: NotificationTypes.FilterNotification\n    predict: string\n    imgSrc: string\n}\n\nexport interface ContentNotification extends Notification {\n    type: NotificationTypes.ContentNotification\n    images?: Array<HTMLImageElement>\n    videos?: Array<HTMLVideoElement>\n}\n\nexport interface CnnModelSettingNotification extends Notification {\n    type: NotificationTypes.CnnModelSettingNotification\n    cnnModel?: tf.GraphModel\n    classNames?: ClassNames\n    enables?: Array<boolean>\n}\n\nexport interface TensorFlowHubModelNotification extends Notification {\n    type: NotificationTypes.TensorFlowHubModelNotification\n    cnnModelHub: TensorflowHubModel\n    classNames?: ClassNames\n    enables?: Array<boolean>\n}\n\n\nexport interface ClassNameUrlsNotification extends Notification {\n    type: NotificationTypes.ClassNameUrlsNotification\n    urls: { [key: string]: string }\n}\n\nexport interface ImageUrlsNotification extends Notification {\n    type: NotificationTypes.ImageUrlsNotification\n    imageUrls: Array<string>\n}\n\nexport interface ImageDataNotification extends Notification {\n    type: NotificationTypes.ImageDataNotification\n    inputs: Array<{ src: string, data: ImageData }>\n}\n\n\n","import { Component, OnInit } from \"@angular/core\"\n\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"]\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n\n\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top rounded-bottom\" style=\"position: sticky\">\n  <a class=\"navbar-brand\" routerLink=\"\">\n    <img id=\"logo\" src=\"assets/app-component/deep-learning-light.png\" width=\"75\" height=\"45\"\n         class=\"d-inline-block align-top\" alt=\"\">\n    An chrome Extension\n  </a>\n\n  <div class=\"navbar-nav mr-auto \">\n\n    <div class=\"nav-item\">\n\n      <div style=\"width: 50%\">\n        <a class=\" nav-link\" routerLink=\"filters\"> Filters</a>\n      </div>\n\n      <div style=\"width: 50%\">\n        <a class=\" nav-link\" routerLink=\"models\">Models</a>\n      </div>\n\n    </div>\n\n  </div>\n\n</nav>\n","import {Injectable} from \"@angular/core\"\nimport {Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../interfaces/notifications\"\nimport {TensorflowHubModel} from \"../../interfaces/tensorflow-hub-model\"\nimport {UserInterfaceCommunication} from \"../../../utils/user-interface-communication\"\nimport {ChromeUserInterfaceCommunication} from \"./chrome-browser/chrome-user-interface-communication\"\nimport Module from \"../../../utils/module\"\nimport {Observer} from \"rxjs\"\n\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class BrowserUserInterfaceService extends Module<Notification, Notification> {\n\n    private readonly browser: UserInterfaceCommunication<Notification, Notification>\n\n    private currentCnnModelSettings: TensorFlowHubModelNotification\n\n    constructor() {\n        super()\n        console.log(\"create User Interface Communication\")\n        this.browser = BrowserUserInterfaceService.selectBrowserUserInterfaceCommunication()\n        this.observe(this.browser)\n        this.browser.tryToStart()\n    }\n\n    private callbacks = {\n        [NotificationTypes.TensorFlowHubModelNotification]: this.browserNotification.bind(this)\n    }\n\n\n    private static selectBrowserUserInterfaceCommunication(): UserInterfaceCommunication<Notification, Notification> {\n        if (chrome) {\n            return new ChromeUserInterfaceCommunication()\n        } else {\n            throw new Error(\"Not implemented\")\n        }\n\n    }\n\n\n    selectTensorHubModel(cnnModel: TensorflowHubModel) {\n\n        const newNotification: TensorFlowHubModelNotification = {...this.currentCnnModelSettings, cnnModelHub: cnnModel}\n        this.browser.sendNotification(newNotification)\n\n    }\n\n    selectLocalModel(url: string) {\n        const notification: Notification = {type: NotificationTypes.LocalModelInputNotification, message: url}\n        this.browser.sendNotification(notification)\n    }\n\n    changeFilterStatus(index: number) {\n        const newNotification: TensorFlowHubModelNotification = {...this.currentCnnModelSettings}\n        newNotification.enables[index] = !newNotification.enables[index]\n        this.browser.sendNotification(newNotification)\n    }\n\n\n    next(notification: Notification): void {\n\n        console.log(this.callbacks)\n\n\n        if (this.callbacks[notification.type]) {\n            this.callbacks[notification.type](notification)\n        }\n\n    }\n\n    error(e: any): void {\n\n    }\n\n    complete(): void {\n\n    }\n\n    addCnnModelSettingsObserver(observer: Observer<TensorFlowHubModelNotification>) {\n        this.subject.subscribe(observer)\n        this.notifyAll()\n    }\n\n\n    private browserNotification(notification: TensorFlowHubModelNotification) {\n        console.log(\"browser user interface browserNotification: \", notification)\n        this.currentCnnModelSettings = notification\n\n        this.notifyAll()\n    }\n\n    private notifyAll() {\n        console.log(\"call User interface notifyAll\", this.currentCnnModelSettings)\n        if (this.currentCnnModelSettings) {\n            this.subject.next(this.currentCnnModelSettings)\n        } else {\n            this.browser.getCnnModelSettingsFromBackground()\n        }\n    }\n\n\n}\n","import {Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../../interfaces/notifications\"\nimport {USER_INTERFACE_COMMUNICATION_ID, UserInterfaceCommunication} from \"../../../../utils/user-interface-communication\"\nimport {GET_CURRENT_SETTINGS_MESSAGE} from \"../../../background-page/background-communication/chrome-browser/chrome-background-communication\"\nimport Port = chrome.runtime.Port\n\nexport class ChromeUserInterfaceCommunication extends UserInterfaceCommunication <Notification, Notification> {\n\n  private port: Port\n\n  constructor() {\n    super()\n  }\n\n  checkPermissions(): void {\n    if (!chrome.extension || !chrome.runtime) {\n      throw Error(\"Unable to connect to background-page script\")\n    }\n  }\n\n  complete(): void {\n  }\n\n  error(e): void {\n  }\n\n  next(notification: Notification): void {\n  }\n\n  tryToStart(): void {\n    this.checkPermissions()\n    chrome.runtime.onMessage.addListener(this.listener.bind(this))\n    this.port = chrome.runtime.connect({name: USER_INTERFACE_COMMUNICATION_ID})\n    this.port.onMessage.addListener(this.listener.bind(this))\n\n\n  }\n\n\n  sendNotification(tensorflowHubModel: TensorFlowHubModelNotification): void {\n\n    this.port.postMessage(tensorflowHubModel)\n  }\n\n  private listener(message: Notification) {\n    this.subject.next(message)\n\n  }\n\n  getCnnModelSettingsFromBackground() {\n    this.port.postMessage({\n      message: GET_CURRENT_SETTINGS_MESSAGE,\n      type: NotificationTypes.Notification\n    } as Notification)\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\"\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\"\n\nimport { AppModule } from \"./app/app.module\"\nimport { environment } from \"./environments/environment\"\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n","import Module from \"./module\"\n\n\nexport abstract class BrowserCommunication<I, O> extends Module<I, O> {\n\n    abstract tryToStart(): void\n\n    protected abstract checkPermissions(): void\n\n\n}\n\n","import * as tf from \"@tensorflow/tfjs\"\n\nimport {Notification, TensorFlowHubModelNotification} from \"../app/interfaces/notifications\"\n\nexport default abstract class CnnModelLoader {\n\n    protected notification: Notification\n\n    protected constructor(notification: Notification) {\n        this.notification = notification\n\n    }\n\n\n    abstract async getCnnModel(): Promise<tf.GraphModel>\n\n    abstract async getSettings(): Promise<TensorFlowHubModelNotification>\n\n\n}\n","import Module from \"../module\"\nimport {\n    ContentNotification,\n    FilterNotification,\n    ImageDataNotification,\n    ImageNotification,\n    ImageUrlsNotification,\n    Notification,\n    NotificationTypes\n} from \"../../app/interfaces/notifications\"\n\nexport const ENABLE_LOGGERS = true\n\nexport class TimeLogger extends Module <Notification, Notification> {\n\n\n    constructor(private loggerName) {\n        super()\n\n\n    }\n\n    private exportCSV = false\n\n    private timers: { [index: string]: { timeInMilliseconds: number, isDate: boolean } } = {}\n\n    private callbacks = {\n        [NotificationTypes.ImageSourceNotification]: this.imageSourceNotification.bind(this),\n        [NotificationTypes.FilterNotification]: this.filterNotification.bind(this),\n        [NotificationTypes.ImageNotification]: this.imageNotification.bind(this),\n        [NotificationTypes.ContentNotification]: this.contentNotification.bind(this),\n        [NotificationTypes.ImageDataNotification]: this.imageDataNotification.bind(this),\n        [NotificationTypes.ImageUrlsNotification]: this.imageUrlsNotification.bind(this)\n    }\n\n    private toCsvFile(data: string) {\n        const a = document.createElement(\"a\")\n        const blob = new Blob([data], {type: \"text/csv\"})\n        a.href = URL.createObjectURL(blob)\n        a.download = `${this.loggerName}.csv`\n        document.body.appendChild(a)\n        a.click()\n    }\n\n    protected complete(): void {\n    }\n\n    protected error(e): void {\n    }\n\n    protected next(notification: Notification): void {\n\n        if (this.callbacks[notification.type]) {\n            this.callbacks[notification.type](notification)\n        }\n\n    }\n\n    private imageSourceNotification(notification: Notification) {\n\n        this.updateTime(notification.message)\n    }\n\n    private filterNotification(notification: FilterNotification) {\n\n        this.updateTime(notification.imgSrc)\n    }\n\n    private imageNotification(notification: ImageNotification) {\n\n        this.updateTime(notification.img.src)\n    }\n\n    private contentNotification(notification: ContentNotification) {\n        if (notification.images === undefined) {\n            return\n        }\n        notification.images.forEach(value => this.updateTime(value.src))\n\n    }\n\n    private imageDataNotification(notification: ImageDataNotification) {\n        if (notification.inputs === undefined) {\n            return\n        }\n        notification.inputs.forEach(value => this.updateTime(value.src))\n\n    }\n\n    private imageUrlsNotification(notification: ImageUrlsNotification) {\n        notification.imageUrls.forEach(this.updateTime.bind(this))\n    }\n\n\n    updateTime(index: string) {\n        const currentTimeInMilliseconds = new Date().getTime()\n\n        if (this.timers[index]) {\n            this.timers[index].timeInMilliseconds = currentTimeInMilliseconds - this.timers[index].timeInMilliseconds\n            this.timers[index].isDate = false\n        } else {\n            this.timers[index] = {timeInMilliseconds: currentTimeInMilliseconds, isDate: true}\n        }\n\n        this.toCsvColumn()\n\n    }\n\n    private toCsvColumn() {\n        const loggedTimes = Object.values(this.timers).filter(value => value.isDate === false)\n\n        if (loggedTimes.length < 600) {\n            console.log(`${this.loggerName} loggedTimes ${loggedTimes.length}`)\n            return\n        }\n\n        if (this.exportCSV) {\n            return\n        }\n\n        let csv = `${this.loggerName}\\n`\n\n        for (const timer of loggedTimes) {\n            csv += `${timer.timeInMilliseconds}\\n`\n        }\n\n        this.toCsvFile(csv)\n\n        this.exportCSV = true\n    }\n\n}\n","import {Observer, Subject, Subscription} from \"rxjs\"\n\n\nexport default abstract class Module<I, O> {\n\n  subject = new Subject<O>()\n\n  observer: Observer<I> = {\n    next: this.next.bind(this),\n    error: this.error.bind(this),\n    complete: this.complete.bind(this),\n  }\n\n  protected subscriptions: Array<Subscription> = new Array<Subscription>()\n\n  protected abstract next(notification: I): void\n\n  protected abstract error(e): void\n\n  protected abstract complete(): void\n\n  observe(abstractModule: Module<any, I>) {\n    this.subscriptions.push(abstractModule.subject.subscribe(this.observer))\n  }\n\n  unsubscribe() {\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe()\n    }\n  }\n\n}\n\n","import {BrowserCommunication} from \"./browser-communication\"\nimport {Notification} from \"../app/interfaces/notifications\"\n\nexport const USER_INTERFACE_COMMUNICATION_ID = \"UserInterfaceCommunication\"\n\nexport abstract class UserInterfaceCommunication<I, O> extends BrowserCommunication<I, O> {\n\n\n    abstract sendNotification(notification: Notification): void\n\n    abstract getCnnModelSettingsFromBackground(): void\n\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}