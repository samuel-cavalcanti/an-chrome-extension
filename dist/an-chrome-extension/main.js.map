{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/background/background.component.ts","./src/app/background/background.component.html","./src/app/background/background.module.ts","./src/app/background/convolutional-neural-network/convolutional-neural-network-settings/convolutional-neural-network-settings.ts","./src/app/background/convolutional-neural-network/convolutional-neural-network.ts","./src/app/background/convolutional-neural-network/load-class-names/load-class-names.ts","./src/app/background/load-image/load-image.ts","./src/app/interfaces/notifications.ts","./src/app/navbar/nav-bar.component.ts","./src/app/navbar/nav-bar.component.html","./src/app/services/browser-communication/browser-communication.ts","./src/app/services/browser-communication/chrome-browser/background-communication/chrome-background-communication.ts","./src/app/services/browser-communication/chrome-browser/user-interface-communication/chrome-user-interface-communication.ts","./src/app/services/browser-communication/user-interface-communication/user-interface-communication.ts","./src/app/services/browser-user-interface/browser-user-interface.service.ts","./src/environments/environment.ts","./src/main.ts","./src/utils/module.ts","node-fetch (ignored)","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from \"@angular/core\"\nimport {RouterModule, Routes} from \"@angular/router\"\nimport {BackgroundComponent} from \"./background/background.component\"\n\n\nconst routes: Routes = [\n  {path: \"filters\", loadChildren: () => import(\"./filters/filters.module\").then(m => m.FiltersModule)},\n  {path: \"models\", loadChildren: () => import(\"./cnn-models/cnn-models.module\").then(m => m.CnnModelsModule)},\n  {path: \"background\", component: BackgroundComponent},\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from \"@angular/core\"\nimport {BrowserUserInterfaceService} from \"./services/browser-user-interface/browser-user-interface.service\"\n\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  title = \"nan-chrome-extension\"\n\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n\n\n  }\n}\n","<app-nav-bar></app-nav-bar>\n\n<router-outlet></router-outlet>\n","import {BrowserModule} from \"@angular/platform-browser\"\nimport {NgModule} from \"@angular/core\"\n\nimport {AppRoutingModule} from \"./app-routing.module\"\nimport {AppComponent} from \"./app.component\"\nimport {navBarComponent} from \"./navbar/nav-bar.component\"\n\nimport {BrowserUserInterfaceService} from \"./services/browser-user-interface/browser-user-interface.service\"\nimport {BackgroundModule} from \"./background/background.module\"\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    navBarComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BackgroundModule,\n  ],\n  providers: [BrowserUserInterfaceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from \"@angular/core\"\nimport {ConvolutionalNeuralNetwork} from \"./convolutional-neural-network/convolutional-neural-network\"\nimport {LoadImage} from \"./load-image/load-image\"\nimport {ConvolutionalNeuralNetworkSettings} from \"./convolutional-neural-network/convolutional-neural-network-settings/convolutional-neural-network-settings\"\nimport {ChromeBackgroundCommunication} from \"../services/browser-communication/chrome-browser/background-communication/chrome-background-communication\"\n\n@Component({\n  selector: \"app-background\",\n  templateUrl: \"./background.component.html\",\n  // styleUrls: ['./cnn-models.component.css']\n\n})\nexport class BackgroundComponent {\n\n  constructor() {\n    this.cnnSettings = new ConvolutionalNeuralNetworkSettings()\n    this.cnn = new ConvolutionalNeuralNetwork()\n    this.loadImage = new LoadImage()\n    this.browser = BackgroundComponent.selectBrowserBackgroundCommunication()\n\n    this.subscribes()\n\n    this.startFilter()\n\n\n  }\n\n  private cnn: ConvolutionalNeuralNetwork\n  private loadImage: LoadImage\n  private browser: ChromeBackgroundCommunication\n  private cnnSettings: ConvolutionalNeuralNetworkSettings\n\n\n  static selectBrowserBackgroundCommunication(): ChromeBackgroundCommunication {\n\n    if (chrome) {\n      return new ChromeBackgroundCommunication()\n    }\n    else {\n      throw new Error(\"Not implemented\")\n    }\n\n  }\n\n  private startFilter() {\n\n    this.browser.tryToStart()\n\n\n  }\n\n  private subscribes() {\n    this.cnn.addObserver(this.browser)\n    this.cnn.addObserver(this.loadImage)\n    this.cnn.addObserver(this.cnnSettings)\n\n    this.loadImage.addObserver(this.browser)\n    this.loadImage.addObserver(this.cnnSettings)\n\n    this.browser.addObserver(this.cnn)\n    this.browser.addObserver(this.cnnSettings)\n\n    this.cnnSettings.addObserver(this.browser)\n  }\n\n}\n","<p>background works!</p>\n","import {NgModule} from \"@angular/core\"\nimport {CommonModule} from \"@angular/common\"\nimport {BackgroundComponent} from \"./background.component\"\n\n\n@NgModule({\n  declarations: [BackgroundComponent],\n  imports: [\n    CommonModule,\n  ],\n  exports: [BackgroundComponent]\n})\nexport class BackgroundModule {\n}\n","import * as tf from \"@tensorflow/tfjs\"\nimport Module from \"../../../../utils/module\"\nimport {\n  ClassNameUrlsNotification,\n  CnnModelSettingNotification,\n  InputShapeNotification,\n  Notification,\n  NotificationTypes,\n  TensorFlowHubModelNotification\n} from \"../../../interfaces/notifications\"\nimport {ClassNames} from \"../../../interfaces/class-names\"\nimport LoadClassNames from \"../load-class-names/load-class-names\"\n\n\nexport class ConvolutionalNeuralNetworkSettings extends Module<Notification, Notification> {\n\n  private callbacks = {\n    [NotificationTypes.TensorFlowHubModelNotification]: this.hubModelNotification.bind(this),\n    [NotificationTypes.ClassNameUrlsNotification]: this.classNameUrlsNotification.bind(this)\n  }\n\n  private currentSettings: TensorFlowHubModelNotification\n\n  constructor() {\n    super()\n  }\n\n  private localClassesNames: { [key: string]: string }\n\n  private async loadCnnModel(tensorHubUrl: string): Promise<tf.GraphModel | undefined> {\n\n    if (!this.needToLoadModel(tensorHubUrl)) {\n      return undefined\n    }\n\n\n    console.log(\"Loading model...\")\n\n    const startTime = performance.now()\n\n    const cnnModel = await tf.loadGraphModel(tensorHubUrl, {fromTFHub: true})\n\n    console.log(`Model loaded  in ${Math.floor(performance.now() - startTime)} ms...`)\n\n    return cnnModel\n  }\n\n\n  next(message: Notification) {\n\n\n    if (this.callbacks[message.type]) {\n      this.callbacks[message.type](message)\n    }\n\n\n  }\n\n\n  complete(): void {\n  }\n\n  error(e): void {\n  }\n\n  private async hubModelNotification(message: TensorFlowHubModelNotification) {\n\n    if (this.localClassesNames[message.cnnModelHub.dataset]) {\n      try {\n        const model = await this.loadCnnModel(message.cnnModelHub.url)\n        const classNames = await this.loadClassNames(message.cnnModelHub.dataset)\n        this.updateSetting(message, classNames)\n        this.notify(model)\n      } catch (e) {\n        console.warn(\"Unable update cnn settings: \", e)\n      }\n\n    }\n\n  }\n\n  private classNameUrlsNotification(notification: ClassNameUrlsNotification) {\n\n    this.localClassesNames = notification.urls\n\n    console.log(\"local Classes Names\", this.localClassesNames)\n\n  }\n\n\n  private notify(cnnModel: tf.GraphModel) {\n\n    this.notifyCnn(cnnModel)\n\n    this.notifyLoadImage(cnnModel)\n\n    this.notifyUserInterface()\n\n  }\n\n  private async loadClassNames(dataset: string): Promise<ClassNames> {\n\n\n    if (this.needToLoadClassNames(dataset)) {\n      return LoadClassNames.loadClassByXMLRequest(this.localClassesNames[dataset])\n    }\n    else {\n      return this.currentSettings.classNames\n    }\n\n  }\n\n\n  private needToLoadModel(url: string): boolean {\n    if (!url) {\n      return false\n    }\n\n    if (!this.currentSettings) {\n      return true\n    }\n\n    if (!this.currentSettings.cnnModelHub) {\n      return true\n    }\n\n    return this.currentSettings.cnnModelHub.url !== url\n\n  }\n\n  private needToLoadClassNames(dataset: string) {\n    if (!dataset) {\n      return false\n    }\n\n    if (!this.currentSettings) {\n      return true\n    }\n\n    if (!this.currentSettings.cnnModelHub.dataset) {\n      return true\n    }\n\n    return this.currentSettings.cnnModelHub.dataset !== dataset\n  }\n\n  private updateSetting(notification: TensorFlowHubModelNotification, classNames: ClassNames) {\n    const enables = notification.enables ? notification.enables : Object.values(classNames).map(() => true)\n    const oldSettings = this.currentSettings ? this.currentSettings : {}\n    this.currentSettings = {...oldSettings, ...notification, classNames, enables}\n  }\n\n  private notifyLoadImage(cnnModel: tf.GraphModel) {\n    if (!cnnModel) {\n      return\n    }\n\n    const shape = [...cnnModel.inputs[0].shape]\n\n    if (!shape) {\n      throw Error(`Shape is undefined ${shape}`)\n    }\n\n    console.log(\"Shape of Model : \", shape)\n\n    const notification: InputShapeNotification = {\n      type: NotificationTypes.InputShapeNotification,\n      shape: shape.splice(1, shape.length)\n    }\n\n    this.subject.next(notification)\n\n  }\n\n  private notifyCnn(cnnModel: tf.GraphModel) {\n    const cnnMessage: CnnModelSettingNotification = {\n      id: \"ConvolutionalNeuralNetworkSettings\",\n      type: NotificationTypes.CnnModelSettingNotification,\n      cnnModel,\n      classNames: this.currentSettings.classNames,\n      enables: this.currentSettings.enables\n    }\n    this.subject.next(cnnMessage)\n\n  }\n\n  private notifyUserInterface() {\n    this.subject.next(this.currentSettings)\n  }\n}\n","import * as tf from \"@tensorflow/tfjs\"\nimport {ClassNames} from \"../../interfaces/class-names\"\n\nimport {\n  CnnModelSettingNotification,\n  FilterNotification,\n  ImageNotification,\n  Notification,\n  NotificationTypes\n} from \"../../interfaces/notifications\"\n\nimport Module from \"../../../utils/module\"\n\n\nexport class ConvolutionalNeuralNetwork extends Module<Notification, Notification> {\n\n  // private ONE_SECOND_IN_MS = 1000\n\n  private classNames: ClassNames\n  private model: tf.GraphModel\n  private enables: Array<boolean>\n  private predict = {[0]: \"not show\", [1]: \"show\"}\n\n\n  constructor() {\n    super()\n\n  }\n\n  error(e): void {\n\n  }\n\n  complete(): void {\n\n  }\n\n  next(message: Notification) {\n\n    if (message.type === NotificationTypes.ImageNotification) {\n      return this.imageNotification(message as ImageNotification)\n    }\n\n    if (message.type === NotificationTypes.CnnModelSettingNotification) {\n      return this.settingsNotification(message as CnnModelSettingNotification)\n    }\n\n  }\n\n  private imageNotification(message: ImageNotification) {\n\n    const outputMessage: FilterNotification = {\n      type: NotificationTypes.FilterNotification,\n      id: message.id,\n      predict: this.predict[1],\n      imgSrc: message.img.src\n    }\n\n    if (!this.model) {\n      this.subject.next(outputMessage)\n      return\n    }\n\n    this.startToPredict(message.img)\n      .then((pred: string) => {\n        console.log(\"CNN pred:\", pred)\n        outputMessage.predict = pred\n        this.subject.next(outputMessage)\n      })\n  }\n\n  private settingsNotification(message: CnnModelSettingNotification) {\n    if (message.cnnModel) {\n      this.model = message.cnnModel\n    }\n    if (message.classNames) {\n      this.classNames = message.classNames\n    }\n    if (message.enables) {\n      this.enables = message.enables\n    }\n\n\n  }\n\n\n  private async getTheBestClass(logIts: tf.Tensor): Promise<string> {\n    const {indices} = tf.topk(logIts, 1, true)\n    const argMax = await indices.data()\n\n    console.log(this.classNames[argMax[0]])\n    const pred = this.enables[argMax[0]] ? 1 : 0\n    return this.predict[pred]\n  }\n\n\n  protected async startToPredict(image: HTMLImageElement): Promise<string> {\n    return new Promise<string>(async (resolve, reject) => {\n      try {\n        const logIts = tf.tidy(this.tinyFunction.bind(this, image))\n        resolve(this.getTheBestClass(logIts as tf.Tensor))\n      } catch (e) {\n        // console.error(\"Unable to execute tinyFunction\", e)\n        reject(e)\n      }\n\n\n    })\n  }\n\n\n  private tinyFunction(img: HTMLImageElement): tf.Tensor | tf.Tensor[] | tf.NamedTensorMap {\n\n    const image = tf.browser.fromPixels(img).toFloat()\n\n\n    const normalized = image.div(tf.scalar(255.0))\n    // const shape = this.model.inputs[0].shape\n\n\n    const batched = normalized.reshape([1, 224, 224, 3])\n\n\n    return this.model.predict(batched)\n\n  }\n\n\n}\n","import {ClassNames} from \"../../../interfaces/class-names\"\n\nexport default class LoadClassNames {\n\n\n  static async loadClassByXMLRequest(path: string): Promise<ClassNames> {\n\n    return new Promise<ClassNames>((resolve, reject) => {\n      const xhr = new XMLHttpRequest()\n\n      xhr.addEventListener(\"load\", () => {\n\n        resolve(JSON.parse(xhr.responseText))\n      })\n\n      xhr.addEventListener(\"error\", () => {\n        reject(`Error not solver request`)\n      })\n      xhr.open(\"GET\", path, true)\n      xhr.send()\n    })\n\n\n  }\n\n\n}\n","import {\n  ImageNotification,\n  InputShapeNotification,\n  Notification,\n  NotificationTypes\n} from \"../../interfaces/notifications\"\nimport Module from \"../../../utils/module\"\n\n\nexport class LoadImage extends Module<Notification, Notification> {\n\n  constructor() {\n    super()\n  }\n\n  private static noTabError = new Error(\"Tab Not found\")\n  private shape = {width: 224, height: 224, min: 40}\n\n\n  private tabs: { [key: string]: string } = {}\n\n  private callbacks = {\n    [NotificationTypes.ImageSourceNotification]: this.imageSourceNotification.bind(this),\n    // [NotificationTypes.InputShapeNotification]: this.inputShapeNotification.bind(this)\n  }\n\n  error(e): void {\n\n  }\n\n  complete(): void {\n\n  }\n\n  next(notification: Notification) {\n\n    if (this.callbacks[notification.type]) {\n      this.callbacks[notification.type](notification)\n    }\n\n  }\n\n  private imageSourceNotification(notification: Notification) {\n    if (notification.id === undefined) {\n      throw LoadImage.noTabError\n    }\n\n    const img = this.createDomElement(notification.message)\n    this.linkSourceToTab(img.src, notification.id)\n  }\n\n  private inputShapeNotification(notification: InputShapeNotification) {\n    this.shape.width = notification.shape[0]\n    this.shape.height = notification.shape[1]\n\n  }\n\n\n  private createDomElement(src: string): HTMLImageElement {\n    if (!src) {\n      return undefined\n    }\n\n    const img = document.createElement(\"img\")\n    img.addEventListener(\"error\", this.onError.bind(this))\n    img.addEventListener(\"load\", this.onLoad.bind(this))\n    img.src = src\n    return img\n  }\n\n  private linkSourceToTab(src: string, tabUUID: string) {\n    this.tabs[src] = tabUUID\n  }\n\n  private onError(event) {\n    delete this.tabs[event.target.src]\n\n  }\n\n  private onLoad(event) {\n    const imgTarget = (event.target as HTMLImageElement)\n    if ((imgTarget.height && imgTarget.height >= this.shape.min) || (imgTarget.width && imgTarget.width >= this.shape.min)) {\n      imgTarget.width = this.shape.width\n      imgTarget.height = this.shape.height\n      this.notify(imgTarget)\n      return\n    }\n\n  }\n\n  private getTabFromSource(src: string): string {\n    const tab = this.tabs[src]\n    if (!tab) {\n      throw Error(\"Tab Not found\")\n    }\n\n    return this.tabs[src]\n  }\n\n  notify(img: HTMLImageElement) {\n    const id = this.getTabFromSource(img.src)\n\n    this.subject.next({type: NotificationTypes.ImageNotification, id, img} as ImageNotification)\n    delete this.tabs[img.src]\n  }\n\n}\n","import {ClassNames} from \"./class-names\"\nimport * as tf from \"@tensorflow/tfjs\"\nimport {TensorflowHubModel} from \"./tensorflow-hub-model\"\n\nexport enum NotificationTypes {\n  Notification,\n  ImageSourceNotification,\n  ClassNameUrlsNotification,\n  ImageNotification,\n  FilterNotification,\n  ContentNotification,\n  CnnModelSettingNotification,\n  TensorFlowHubModelNotification,\n  InputShapeNotification\n}\n\nexport interface Notification {\n  id?: string\n  type: number\n  message?: string\n}\n\nexport interface ImageNotification extends Notification {\n  type: NotificationTypes.ImageNotification\n  img: HTMLImageElement,\n}\n\n\nexport interface FilterNotification extends Notification {\n  type: NotificationTypes.FilterNotification\n  predict: string\n  imgSrc: string\n}\n\nexport interface ContentNotification extends Notification {\n  type: NotificationTypes.ContentNotification\n  urlImages?: Array<string>\n  urlVideos?: Array<string>\n}\n\nexport interface CnnModelSettingNotification extends Notification {\n  type: NotificationTypes.CnnModelSettingNotification\n  cnnModel?: tf.GraphModel\n  classNames?: ClassNames\n  enables?: Array<boolean>\n}\n\nexport interface TensorFlowHubModelNotification extends Notification {\n  type: NotificationTypes.TensorFlowHubModelNotification\n  cnnModelHub: TensorflowHubModel\n  classNames?: ClassNames\n  enables?: Array<boolean>\n}\n\nexport interface InputShapeNotification extends Notification {\n  type: NotificationTypes.InputShapeNotification\n  shape: Array<number>\n}\n\nexport interface ClassNameUrlsNotification extends Notification {\n  type: NotificationTypes.ClassNameUrlsNotification\n  urls: { [key: string]: string }\n}\n\n","import { Component, OnInit } from \"@angular/core\"\n\n@Component({\n  selector: \"app-nav-bar\",\n  templateUrl: \"./nav-bar.component.html\",\n  styleUrls: [\"./nav-bar.component.css\"]\n})\nexport class navBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n\n\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top rounded-bottom\" style=\"position: sticky\">\n  <a class=\"navbar-brand\" routerLink=\"\">\n    <img id=\"logo\" src=\"assets/app-component/deep-learning-light.png\" width=\"75\" height=\"45\"\n         class=\"d-inline-block align-top\" alt=\"\">\n    An chrome Extension\n  </a>\n\n  <div class=\"navbar-nav mr-auto \">\n\n    <div class=\"nav-item\">\n\n      <div style=\"width: 50%\">\n        <a class=\" nav-link\" routerLink=\"filters\"> Filters</a>\n      </div>\n\n      <div style=\"width: 50%\">\n        <a class=\" nav-link\" routerLink=\"models\">Models</a>\n      </div>\n\n    </div>\n\n  </div>\n\n</nav>\n","import Module from \"../../../utils/module\"\n\n\nexport abstract class BrowserCommunication<I, O> extends Module<I, O> {\n\n  abstract tryToStart(): void\n\n  abstract checkPermissions(): void\n\n\n}\n\n","import {\n  ClassNameUrlsNotification,\n  ContentNotification,\n  Notification,\n  NotificationTypes,\n  TensorFlowHubModelNotification\n} from \"../../../../interfaces/notifications\"\nimport {BrowserCommunication} from \"../../browser-communication\"\nimport Port = chrome.runtime.Port\n\nexport const GET_CURRENT_SETTINGS_MESSAGE = \"get current cnn settings\"\n\nexport const GET_LOCAL_CLASS_NAME_URLS = \" get local class name urls\"\n\nexport class ChromeBackgroundCommunication extends BrowserCommunication <Notification, Notification> {\n\n\n  private static erros = {\n    enableContentScript: new Error(\"Must enable Chrome Content Scripts\"),\n    enableStorage: new Error(\"Must add Storage permission\"),\n    uuidUndefined: new Error(\"UUID undefined\"),\n    urlsUndefined: new Error(\"URLS undefined\")\n  }\n\n  private callbacks = {\n    [NotificationTypes.Notification]: this.simpleNotifications.bind(this),\n    [NotificationTypes.ContentNotification]: this.notifyImages.bind(this),\n    [NotificationTypes.TensorFlowHubModelNotification]: this.notifyCnnSettings.bind(this)\n  }\n\n  private storeKey = \"settings\"\n\n  private readonly ports: { [key: string]: Port }\n\n  private userInterfacePort: Port\n\n  private localClassesNames = {\n    [\"imagenet-ilsvrc-2012-cls\"]: chrome.runtime.getURL(\"assets/modelJS/Image-net-class.json\")\n  }\n\n  constructor() {\n    super()\n    this.ports = {}\n\n  }\n\n  checkPermissions() {\n    if (chrome.runtime === undefined || chrome.runtime.getURL === undefined) {\n      throw ChromeBackgroundCommunication.erros.enableContentScript\n    }\n\n    if (chrome.storage === undefined) {\n      throw ChromeBackgroundCommunication.erros.enableStorage\n    }\n  }\n\n  tryToStart() {\n    console.log(\"stating browser listener ...\")\n    try {\n      this.checkPermissions()\n      chrome.runtime.onConnect.addListener(this.onConnect.bind(this))\n      this.loadLocalData()\n      this.sendClassNameUrls()\n    } catch (e) {\n      console.log(\"Unable to  start runtime\")\n      console.log(e)\n    }\n\n\n  }\n\n\n  complete() {\n  }\n\n  error(e) {\n  }\n\n  next(notification: Notification) {\n\n    if (this.ports[notification.id]) {\n      this.ports[notification.id].postMessage(notification)\n    }\n\n\n    if (notification.type === NotificationTypes.TensorFlowHubModelNotification) {\n      this.storeSettings(notification as TensorFlowHubModelNotification)\n    }\n  }\n\n\n  private onConnect(port: Port) {\n\n    this.ports[port.name] = port\n\n    port.onMessage.addListener(this.listener.bind(this))\n    port.onDisconnect.addListener(this.disconnect.bind(this))\n\n  }\n\n  private listener(notification: Notification, port: Port) {\n\n    if (this.callbacks[notification.type]) {\n      this.callbacks[notification.type](notification, port)\n    }\n\n  }\n\n  private disconnect(port: Port) {\n    delete this.ports[port.name]\n  }\n\n\n  private notifyImages(notification: ContentNotification, port: Port) {\n\n    const urlImages = notification.urlImages\n\n    if (port === undefined) {\n      throw ChromeBackgroundCommunication.erros.uuidUndefined\n    }\n\n    if (urlImages === undefined) {\n      throw ChromeBackgroundCommunication.erros.urlsUndefined\n    }\n\n    for (const url of urlImages) {\n      if (url) {\n        this.subject.next({message: url, id: port.name, type: NotificationTypes.ImageSourceNotification} as Notification)\n      }\n    }\n\n  }\n\n  private notifyCnnSettings(notification: TensorFlowHubModelNotification, port: Port) {\n\n    notification.id = port.name\n\n\n    this.subject.next(notification)\n  }\n\n\n  private loadLocalData() {\n    chrome.storage.local.get([this.storeKey], this.callbackStorage.bind(this))\n  }\n\n  private callbackStorage(result: any) {\n\n    const notification: TensorFlowHubModelNotification = result.settings\n\n    if (notification) {\n      this.subject.next(notification)\n      this.next(notification)\n    } else if (this.userInterfacePort) {\n      this.next({\n        id: this.userInterfacePort.name,\n        cnnModelHub: {},\n        classNames: {},\n        type: NotificationTypes.TensorFlowHubModelNotification\n      } as TensorFlowHubModelNotification)\n    }\n\n\n  }\n\n  private storeSettings(settings: TensorFlowHubModelNotification) {\n    chrome.storage.local.set({[this.storeKey]: settings})\n  }\n\n\n  private simpleNotifications(notification: Notification, port: Port) {\n    if (notification.message === GET_CURRENT_SETTINGS_MESSAGE) {\n      console.log(\"load local data\")\n      this.userInterfacePort = port\n      this.loadLocalData()\n    } else if (notification.message === GET_LOCAL_CLASS_NAME_URLS) {\n      this.sendClassNameUrls()\n    }\n  }\n\n  private sendClassNameUrls() {\n    this.subject.next({\n      type: NotificationTypes.ClassNameUrlsNotification,\n      urls: this.localClassesNames\n    } as ClassNameUrlsNotification)\n  }\n\n}\n","import {Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../../../interfaces/notifications\"\nimport {UserInterfaceCommunication} from \"../../user-interface-communication/user-interface-communication\"\nimport {GET_CURRENT_SETTINGS_MESSAGE} from \"../background-communication/chrome-background-communication\"\nimport Port = chrome.runtime.Port\n\nexport class ChromeUserInterfaceCommunication extends UserInterfaceCommunication <Notification, Notification> {\n\n  private port: Port\n\n  constructor() {\n    super()\n  }\n\n  checkPermissions(): void {\n    if (!chrome.extension || !chrome.runtime) {\n      throw Error(\"Unable to connect to background script\")\n    }\n  }\n\n  complete(): void {\n  }\n\n  error(e): void {\n  }\n\n  next(notification: Notification): void {\n  }\n\n  tryToStart(): void {\n    this.checkPermissions()\n    chrome.runtime.onMessage.addListener(this.listener.bind(this))\n    this.port = chrome.runtime.connect({name: this.id})\n    this.port.onMessage.addListener(this.listener.bind(this))\n    this.getCnnModelSettingsFromBackground()\n\n  }\n\n\n  setCnnModelSettings(tensorflowHubModel: TensorFlowHubModelNotification): void {\n\n    this.port.postMessage(tensorflowHubModel)\n  }\n\n  private listener(message: Notification) {\n    this.subject.next(message)\n\n  }\n\n  getCnnModelSettingsFromBackground() {\n    this.port.postMessage({\n      message: GET_CURRENT_SETTINGS_MESSAGE,\n      type: NotificationTypes.Notification\n    } as Notification)\n  }\n\n\n}\n","import {BrowserCommunication} from \"../browser-communication\"\n\nexport abstract class UserInterfaceCommunication<I, O> extends BrowserCommunication<I, O> {\n\n  protected id = \"popup\"\n\n  abstract setCnnModelSettings(setting: any): void\n\n  abstract getCnnModelSettingsFromBackground(): void\n\n}\n","import {Injectable} from \"@angular/core\"\nimport {Notification, NotificationTypes, TensorFlowHubModelNotification} from \"../../interfaces/notifications\"\nimport {TensorflowHubModel} from \"../../interfaces/tensorflow-hub-model\"\nimport {UserInterfaceCommunication} from \"../browser-communication/user-interface-communication/user-interface-communication\"\nimport {ChromeUserInterfaceCommunication} from \"../browser-communication/chrome-browser/user-interface-communication/chrome-user-interface-communication\"\nimport Module from \"../../../utils/module\"\nimport {Observer} from \"rxjs\"\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class BrowserUserInterfaceService extends Module<Notification, Notification> {\n\n\n  constructor() {\n    super()\n    console.info(\"create User Interface Communication\")\n    this.browser = BrowserUserInterfaceService.selectBrowserUserInterfaceCommunication()\n    this.addObserver(this.browser)\n    this.browser.tryToStart()\n  }\n  private callbacks = {\n    [NotificationTypes.TensorFlowHubModelNotification]: this.browserNotification.bind(this)\n  }\n\n\n  private readonly browser: UserInterfaceCommunication<Notification, Notification>\n\n  private currentCnnModelSettings: TensorFlowHubModelNotification\n\n  static selectBrowserUserInterfaceCommunication(): UserInterfaceCommunication<Notification, Notification> {\n    if (chrome) {\n      return new ChromeUserInterfaceCommunication()\n    }\n    else {\n      throw new Error(\"Not implemented\")\n    }\n\n  }\n\n\n  selectTensorHubModel(cnnModel: TensorflowHubModel) {\n\n    const newNotification: TensorFlowHubModelNotification = {...this.currentCnnModelSettings, cnnModelHub: cnnModel}\n    this.browser.setCnnModelSettings(newNotification)\n\n  }\n\n  changeFilterStatus(index: number) {\n    const newNotification: TensorFlowHubModelNotification = {...this.currentCnnModelSettings}\n    newNotification.enables[index] = !newNotification.enables[index]\n    this.browser.setCnnModelSettings(newNotification)\n  }\n\n\n  next(notification: Notification): void {\n    console.log(\"browser user interface browserNotification: \", notification)\n    console.log(this.callbacks)\n\n\n    if (this.callbacks[notification.type]) {\n      this.callbacks[notification.type](notification)\n    }\n\n  }\n\n  error(e: any): void {\n\n  }\n\n  complete(): void {\n\n  }\n\n  addCnnModelSettingsObserver(observer: Observer<TensorFlowHubModelNotification>) {\n    this.subject.subscribe(observer)\n    this.notifyAll()\n  }\n\n\n  private browserNotification(notification: TensorFlowHubModelNotification) {\n\n    this.currentCnnModelSettings = notification\n\n\n    this.notifyAll()\n  }\n\n  private notifyAll() {\n    if (this.currentCnnModelSettings) {\n      this.subject.next(this.currentCnnModelSettings)\n    }\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\"\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\"\n\nimport { AppModule } from \"./app/app.module\"\nimport { environment } from \"./environments/environment\"\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n","import {Observer, Subject, Subscription} from \"rxjs\"\n\n\nexport default abstract class Module<I, O> {\n\n  subject = new Subject<O>()\n\n  observer: Observer<I> = {\n    next: this.next.bind(this),\n    error: this.error.bind(this),\n    complete: this.complete.bind(this),\n  }\n\n  protected subscriptions: Array<Subscription> = new Array<Subscription>()\n\n  protected abstract next(notification: I): void\n\n  protected abstract error(e): void\n\n  protected abstract complete(): void\n\n  addObserver(abstractModule: Module<any, I>) {\n    this.subscriptions.push(abstractModule.subject.subscribe(this.observer))\n  }\n\n  unsubscribe() {\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe()\n    }\n  }\n\n}\n\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}