{"version":3,"sources":["./src/app/interfaces/notifications.ts","./src/content-script/chrome-browser-content-communication.ts","./src/content-script/content-script.ts","./src/content-script/document-observer.ts"],"names":[],"mappings":";;;;;;;;;;AAIA;AAAA;AAAA,IAAY,iBASX;AATD,WAAY,iBAAiB;IAC3B,yEAAY;IACZ,+FAAuB;IACvB,mFAAiB;IACjB,qFAAkB;IAClB,uFAAmB;IACnB,uGAA2B;IAC3B,6GAA8B;IAC9B,6FAAsB;AACxB,CAAC,EATW,iBAAiB,KAAjB,iBAAiB,QAS5B;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAuC;AACoE;AACzE;AAGlC;IAaE;QAZA,YAAO,GAAG,IAAI,4CAAO,EAAsB;QAE3C,aAAQ,GAAkC;YACxC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5B,KAAK,EAAE;YACP,CAAC;YACD,QAAQ,EAAE;YACV,CAAC;SACF;QAKC,IAAI,CAAC,IAAI,GAAG,SAAS;IACvB,CAAC;IAEO,kDAAM,GAAd,UAAe,OAA4B;QACzC,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS;YACxB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC;QAEnE,OAAO,CAAC,IAAI,GAAG,+EAAiB,CAAC,mBAAmB;QACpD,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;QAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAChC,CAAC;IAGO,oDAAQ,GAAhB,UAAiB,YAAgC;QAC/C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;IAEjC,CAAC;IAED,4DAAgB,GAAhB;QAEE,IAAI;YACF,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,+CAAM,EAAE,EAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAE1D;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,4CAA4C,CAAC;YAC3D,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;SACjB;IAGH,CAAC;IAGH,wCAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpDD;AAAA;AAAA;AAAuF;AACpC;AAGnD,IAAM,iCAAiC,GAAsC,IAAI,6EAAiC,EAAE;AACpH,IAAM,gBAAgB,GAAqB,IAAI,0DAAgB,EAAE;AAEjE,iCAAiC,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,CAAC;AAC9E,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,iCAAiC,CAAC,QAAQ,CAAC;AAG9E,iCAAiC,CAAC,gBAAgB,EAAE;AAEpD,gBAAgB,CAAC,KAAK,EAAE;;;;;;;;;;;;;;;;;;ACRiB;AACF;AAEvC;IAAA;QAEE,YAAO,GAAG,IAAI,4CAAO,EAAgB;QAErC,aAAQ,GAA2B;YACjC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9B,KAAK,EAAE;YACP,CAAC;YACD,QAAQ,EAAE;YACV,CAAC;SACF;QAEO,eAAU,GAAmC,EAAE;QAE/C,kBAAa,GAAG;YAEtB,KAAK,EAAE,IAAI,KAAK,CAAC,qCAAqC,CAAC;YAEvD,OAAO,EAAE,IAAI,KAAK,CAAC,wDAAwD,CAAC;SAC7E;IAmKH,CAAC;IAjKC,gCAAK,GAAL;QACE,IAAI,CAAC,qBAAqB,EAAE;QAG5B,IAAI,CAAC,cAAc,EAAE;IACvB,CAAC;IAGO,gDAAqB,GAA7B;QACE,IAAM,SAAS,GAAkB,IAAI,CAAC,mBAAmB,EAAE;QAC3D,IAAM,SAAS,GAAkB,IAAI,CAAC,mBAAmB,EAAE;QAE3D,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC;IAGrC,CAAC;IAEO,8CAAmB,GAA3B;QACE,IAAI,WAAW,GAAkB,IAAI,KAAK,CAAS,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;QAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE;gBACjC,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG;gBACvC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;aAC7D;SACF;QAGD,OAAO,WAAW,CAAC;IACrB,CAAC;IAEO,8CAAmB,GAA3B;;QACE,IAAI,QAAQ,GAAQ,QAAQ,CAAC,oBAAoB,CAAC,OAAO,CAAC;QAC1D,IAAI,MAAM,GAAkB,IAAI,KAAK,CAAS,QAAQ,CAAC,MAAM,CAAC;;YAE9D,KAAsB,gFAAQ,2FAAE;gBAA3B,IAAM,OAAO;gBAChB,IAAM,GAAG,GAAG,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC;gBACjD,IAAI,GAAG,CAAC,MAAM,EAAE;oBACd,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO;oBAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;iBACrB;aAEF;;;;;;;;;QAED,OAAO,MAAM,CAAC;IAEhB,CAAC;IAGO,mCAAQ,GAAhB,UAAiB,MAAmB,EAAE,GAAW;QAC/C,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,SAAS,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;YAC9B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IAEd,CAAC;IAEc,4BAAW,GAA1B,UAA2B,KAAuB;QAChD,IAAI,KAAK,IAAI,SAAS;YACpB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC;QAEvC,IAAI,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;YACrD,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjB,OAAO,KAAK,CAAC,OAAO,CAAC;aACtB;SACF;QACD,IAAI,KAAK,CAAC,GAAG;YACX,OAAO,KAAK,CAAC,GAAG,CAAC;QAEnB,OAAO,EAAE;IACX,CAAC;IAEO,wCAAa,GAArB,UAAsB,SAA2B;;QAC/C,IAAI,SAAS,GAAkB,IAAI,KAAK,EAAU;QAClD,IAAI,SAAS,GAAkB,IAAI,KAAK,EAAU;;YAElD,KAAqB,kFAAS,gGAAE;gBAA3B,IAAI,QAAQ;gBACf,IAAI,MAAM,GAAQ,QAAQ,CAAC,MAAM,CAAC;gBAElC,IAAI,MAAM,YAAY,gBAAgB,EAAE;oBACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE;wBACtC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;qBAC3B;iBACF;qBAAM,IAAI,MAAM,YAAY,gBAAgB,EAAE;oBAC7C,IAAM,GAAG,GAAG,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC;oBAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;wBAC/B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;qBAEpB;iBACF;aAEF;;;;;;;;;QAGD,OAAO,EAAC,SAAS,aAAE,SAAS,aAAC;IAC/B,CAAC;IAEO,yCAAc,GAAtB,UAAuB,SAA2B,EAAE,QAA0B;QAC5E,IAAI,IAAI,GAA2D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAEjG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAEhD,CAAC;IAEO,yCAAc,GAAtB;QACE,IAAI,QAAQ,GAAqB,IAAI,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrF,IAAM,MAAM,GAAyB;YACnC,SAAS,EAAE,KAAK;YAChB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE,IAAI;SAEd;QAED,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEzC,CAAC;IAGO,mCAAQ,GAAhB,UAAiB,SAAwB,EAAE,SAAwB;QAEjE,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI,SAAS;YAClD,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO;QAElC,IAAM,YAAY,GAAwB;YACxC,EAAE,EAAE,gCAAgC;YACpC,IAAI,EAAE,+EAAiB,CAAC,mBAAmB;YAC3C,SAAS;YACT,SAAS;SACV;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;IAEjC,CAAC;IAEO,mCAAQ,GAAhB,UAAiB,YAAgC;QAE/C,IAAI,YAAY,CAAC,IAAI,IAAI,+EAAiB,CAAC,kBAAkB;YAC3D,OAAM;QAGR,IAAI,YAAY,CAAC,OAAO,IAAI,MAAM,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC;SAEpC;IAGH,CAAC;IAGO,oCAAS,GAAjB,UAAkB,GAAW;QAE3B,IAAI,GAAG,IAAI,SAAS;YAClB,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK;QAEhC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,8CAA8C;YACtE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,4BAA4B,CAAC;IAE5E,CAAC;IAEH,uBAAC;AAAD,CAAC","file":"content-script.js","sourcesContent":["import {ClassNames} from \"./class-names\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport {TensorflowHubModel} from \"./tensorflow-hub-model\";\n\nexport enum NotificationTypes {\n  Notification,\n  ImageSourceNotification,\n  ImageNotification,\n  FilterNotification,\n  ContentNotification,\n  CnnModelSettingNotification,\n  TensorFlowHubModelNotification,\n  InputShapeNotification\n}\n\nexport interface Notification {\n  id?: string\n  type: number\n  message?: string\n}\n\nexport interface ImageNotification extends Notification {\n  type: NotificationTypes.ImageNotification\n  img: HTMLImageElement,\n}\n\n\nexport interface FilterNotification extends Notification {\n  type: NotificationTypes.FilterNotification\n  predict: string\n  imgSrc: string\n}\n\nexport interface ContentNotification extends Notification {\n  type: NotificationTypes.ContentNotification\n  urlImages?: Array<string>\n  urlVideos?: Array<string>\n}\n\nexport interface CnnModelSettingNotification extends Notification {\n  type: NotificationTypes.CnnModelSettingNotification\n  cnnModel?: tf.GraphModel\n  classNames?: ClassNames\n  enables?: Array<boolean>\n}\n\nexport interface TensorFlowHubModelNotification extends Notification {\n  type: NotificationTypes.TensorFlowHubModelNotification\n  cnnModelHub: TensorflowHubModel\n  classNames?: ClassNames\n  enables?: Array<boolean>\n}\n\nexport interface InputShapeNotification extends Notification {\n  type: NotificationTypes.InputShapeNotification\n  shape: Array<number>\n}\n\n","import {Observer, Subject} from \"rxjs\";\nimport {ContentNotification, FilterNotification, NotificationTypes} from \"../app/interfaces/notifications\";\nimport {v4 as uuidV4} from \"uuid\";\nimport Port = chrome.runtime.Port;\n\nexport default class ChromeBrowserContentCommunication {\n  subject = new Subject<FilterNotification>()\n\n  observer: Observer<ContentNotification> = {\n    next: this.sender.bind(this),\n    error: () => {\n    },\n    complete: () => {\n    }\n  }\n\n  private port: Port\n\n  constructor() {\n    this.port = undefined\n  }\n\n  private sender(message: ContentNotification) {\n    if (this.port == undefined)\n      throw new Error('try to send message when channel is not opened')\n\n    message.type = NotificationTypes.ContentNotification\n    message.id = this.port.name\n    this.port.postMessage(message)\n  }\n\n\n  private listener(notification: FilterNotification) {\n    this.subject.next(notification)\n\n  }\n\n  tryToCommunicate() {\n\n    try {\n      this.port = chrome.runtime.connect({name: uuidV4()})\n      this.port.onMessage.addListener(this.listener.bind(this))\n\n    } catch (e) {\n      console.error(`unable to open channel from content script`)\n      console.error(e)\n    }\n\n\n  }\n\n\n}\n","import ChromeBrowserContentCommunication from \"./chrome-browser-content-communication\";\nimport DocumentObserver from \"./document-observer\";\n\n\nconst chromeBrowserContentCommunication: ChromeBrowserContentCommunication = new ChromeBrowserContentCommunication()\nconst documentObserver: DocumentObserver = new DocumentObserver()\n\nchromeBrowserContentCommunication.subject.subscribe(documentObserver.observer)\ndocumentObserver.subject.subscribe(chromeBrowserContentCommunication.observer)\n\n\nchromeBrowserContentCommunication.tryToCommunicate()\n\ndocumentObserver.start()\n","import {\n  ContentNotification,\n  FilterNotification,\n  Notification,\n  NotificationTypes\n} from \"../app/interfaces/notifications\";\nimport {Observer, Subject} from \"rxjs\";\n\nexport default class DocumentObserver {\n\n  subject = new Subject<Notification>()\n\n  observer: Observer<Notification> = {\n    next: this.listener.bind(this),\n    error: () => {\n    },\n    complete: () => {\n    }\n  }\n\n  private checkTable: { [key: string]: HTMLElement } = {}\n\n  private errorMessages = {\n\n    noSrc: new Error('Cannot read src, property undefined'),\n\n    noArray: new Error('Cannot read urlImages or urlVideos, property undefined')\n  }\n\n  start() {\n    this.sendAllCurrentUrlData()\n\n\n    this.createObserver()\n  }\n\n\n  private sendAllCurrentUrlData() {\n    const urlImages: Array<string> = this.getAllCurrentImages()\n    const urlVideos: Array<string> = this.getAllCurrentVideos()\n\n    this.sendData(urlImages, urlVideos)\n\n\n  }\n\n  private getAllCurrentImages(): Array<string> {\n    let imagesTable: Array<string> = new Array<string>(document.images.length)\n\n    for (let i = 0; i < document.images.length; i++) {\n      if (document.images[i].src.length) {\n        imagesTable[i] = document.images[i].src\n        this.checkTable[document.images[i].src] = document.images[i]\n      }\n    }\n\n\n    return imagesTable;\n  }\n\n  private getAllCurrentVideos(): Array<string> {\n    let elements: any = document.getElementsByTagName(\"video\")\n    let videos: Array<string> = new Array<string>(elements.length)\n\n    for (const element of elements) {\n      const url = DocumentObserver.getUrlVideo(element)\n      if (url.length) {\n        this.checkTable[url] = element\n        videos.push(element)\n      }\n\n    }\n\n    return videos;\n\n  }\n\n\n  private checkSrc(target: HTMLElement, url: string): boolean {\n    if (this.checkTable[url] == undefined) {\n      this.checkTable[url] = target;\n      return false;\n    }\n    return true;\n\n  }\n\n  private static getUrlVideo(video: HTMLVideoElement): string {\n    if (video == undefined)\n      throw new Error('video is undefined')\n\n    if (video.src.substring(0, 4) == \"blob\" || !video.src) {\n      if (video.baseURI) {\n        return video.baseURI;\n      }\n    }\n    if (video.src)\n      return video.src;\n\n    return \"\"\n  }\n\n  private getAllNewData(mutations: MutationRecord[]): { urlImages: Array<string>, urlVideos: Array<string> } {\n    let urlImages: Array<string> = new Array<string>()\n    let urlVideos: Array<string> = new Array<string>()\n\n    for (let mutation of mutations) {\n      let target: any = mutation.target;\n\n      if (target instanceof HTMLImageElement) {\n        if (!this.checkSrc(target, target.src)) {\n          urlImages.push(target.src)\n        }\n      } else if (target instanceof HTMLVideoElement) {\n        const src = DocumentObserver.getUrlVideo(target)\n        if (!this.checkSrc(target, src)) {\n          urlVideos.push(src)\n\n        }\n      }\n\n    }\n\n\n    return {urlImages, urlVideos}\n  }\n\n  private observerImages(mutations: MutationRecord[], observer: MutationObserver) {\n    let data: { urlImages: Array<string>, urlVideos: Array<string> } = this.getAllNewData(mutations);\n\n    this.sendData(data.urlImages, data.urlVideos);\n\n  }\n\n  private createObserver() {\n    let observer: MutationObserver = new MutationObserver(this.observerImages.bind(this))\n    const config: MutationObserverInit = {\n      childList: false,\n      attributes: true,\n      characterData: true,\n      subtree: true,\n      // attributeFilter: [\"src\"],\n    }\n\n    observer.observe(document.body, config)\n\n  }\n\n\n  private sendData(urlImages: Array<string>, urlVideos: Array<string>) {\n\n    if (urlImages == undefined || urlVideos == undefined)\n      throw this.errorMessages.noArray\n\n    const notification: ContentNotification = {\n      id: \"replace  this in communication\",\n      type: NotificationTypes.ContentNotification,\n      urlImages,\n      urlVideos\n    }\n\n    this.subject.next(notification)\n\n  }\n\n  private listener(notification: FilterNotification) {\n\n    if (notification.type != NotificationTypes.FilterNotification)\n      return\n\n\n    if (notification.predict == \"show\") {\n      this.changeCss(notification.imgSrc)\n\n    }\n\n\n  }\n\n\n  private changeCss(src: string) {\n\n    if (src == undefined)\n      throw this.errorMessages.noSrc\n\n    if (this.checkTable[src]) //setAttribute(\"style\", \"display: !important\")\n      this.checkTable[src].setAttribute(\"style\", \"display: inline !important\")\n\n  }\n\n}\n\n"],"sourceRoot":"webpack:///"}