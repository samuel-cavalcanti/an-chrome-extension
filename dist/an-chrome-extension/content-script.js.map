{"version":3,"sources":["./src/app/interfaces/notifications.ts","./src/content-script/chrome-browser-content-communication.ts","./src/content-script/content-script.ts","./src/content-script/document-observer.ts","./src/utils/logger/time-logger.ts","./src/utils/module.ts"],"names":[],"mappings":"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","file":"content-script.js","sourcesContent":["import {ClassNames} from \"./class-names\"\nimport * as tf from \"@tensorflow/tfjs\"\nimport {TensorflowHubModel} from \"./tensorflow-hub-model\"\n\nexport enum NotificationTypes {\n    Notification,\n    ImageSourceNotification,\n    ClassNameUrlsNotification,\n    ImageNotification,\n    FilterNotification,\n    ContentNotification,\n    CnnModelSettingNotification,\n    TensorFlowHubModelNotification,\n    LocalModelInputNotification,\n    ImageDataNotification,\n    ImageUrlsNotification,\n    ImageByURINotification\n}\n\nexport interface Notification {\n    id?: string\n    type: number\n    message?: string\n}\n\nexport interface ImageNotification extends Notification {\n    type: NotificationTypes.ImageNotification\n    img: HTMLImageElement,\n}\n\n\nexport interface FilterNotification extends Notification {\n    type: NotificationTypes.FilterNotification\n    predict: string\n    imgSrc: string\n}\n\nexport interface ContentNotification extends Notification {\n    type: NotificationTypes.ContentNotification\n    images?: Array<HTMLImageElement>\n    videos?: Array<HTMLVideoElement>\n}\n\nexport interface CnnModelSettingNotification extends Notification {\n    type: NotificationTypes.CnnModelSettingNotification\n    cnnModel?: tf.GraphModel\n    classNames?: ClassNames\n    enables?: Array<boolean>\n}\n\nexport interface TensorFlowHubModelNotification extends Notification {\n    type: NotificationTypes.TensorFlowHubModelNotification\n    cnnModelHub: TensorflowHubModel\n    classNames?: ClassNames\n    enables?: Array<boolean>\n}\n\n\nexport interface ClassNameUrlsNotification extends Notification {\n    type: NotificationTypes.ClassNameUrlsNotification\n    urls: { [key: string]: string }\n}\n\nexport interface ImageUrlsNotification extends Notification {\n    type: NotificationTypes.ImageUrlsNotification\n    imageUrls: Array<string>\n}\n\nexport interface ImageDataNotification extends Notification {\n    type: NotificationTypes.ImageDataNotification\n    inputs: Array<{ src: string, data: ImageData }>\n}\n\n\n","import {FilterNotification, Notification} from \"../app/interfaces/notifications\"\nimport {v4 as uuidV4} from \"uuid\"\nimport Module from \"../utils/module\"\nimport Port = chrome.runtime.Port\n\nexport default class ChromeBrowserContentCommunication extends Module <Notification, Notification> {\n\n    private port: Port\n\n    constructor() {\n        super()\n    }\n\n    protected complete(): void {\n    }\n\n    protected error(e): void {\n    }\n\n    protected next(notification: Notification): void {\n        if (this.port === undefined) {\n            throw new Error(\"try to send message when channel is not opened\")\n        }\n\n\n\n        notification.id = this.port.name\n        this.port.postMessage(notification)\n\n    }\n\n\n    private listener(notification: FilterNotification) {\n        this.subject.next(notification)\n\n    }\n\n    tryToCommunicate() {\n\n        try {\n            this.port = chrome.runtime.connect({name: uuidV4()})\n            this.port.onMessage.addListener(this.listener.bind(this))\n\n        } catch (e) {\n            console.error(`unable to open channel from content script`)\n            console.error(e)\n        }\n\n\n    }\n\n\n}\n","import ChromeBrowserContentCommunication from \"./chrome-browser-content-communication\"\nimport DocumentObserver from \"./document-observer\"\nimport {ENABLE_LOGGERS, TimeLogger} from \"../utils/logger/time-logger\"\n\n\nconst chromeBrowserContentCommunication: ChromeBrowserContentCommunication = new ChromeBrowserContentCommunication()\nconst documentObserver: DocumentObserver = new DocumentObserver()\n\n\nchromeBrowserContentCommunication.observe(documentObserver)\ndocumentObserver.observe(chromeBrowserContentCommunication)\n\nif (ENABLE_LOGGERS) {\n    const timeLogger: TimeLogger = new TimeLogger(\"content Script\")\n    timeLogger.observe(chromeBrowserContentCommunication)\n    timeLogger.observe(documentObserver)\n}\n\nchromeBrowserContentCommunication.tryToCommunicate()\n\ndocumentObserver.start()\n","import {ContentNotification, FilterNotification, Notification, NotificationTypes} from \"../app/interfaces/notifications\"\nimport Module from \"../utils/module\"\nimport {TimeLogger} from \"../utils/logger/time-logger\"\n\nexport default class DocumentObserver extends Module<Notification, Notification> {\n\n    private checkTable: { [key: string]: HTMLElement } = {}\n\n    private errorMessages = {\n\n        noSrc: new Error(\"Cannot read src, property undefined\"),\n\n        noArray: new Error(\"Cannot read urlImages or urlVideos, property undefined\")\n    }\n\n    private logger = new TimeLogger(\"image_load_browser\")\n\n\n    private static getUrlVideo(video: HTMLVideoElement): string {\n        if (video === undefined) {\n            throw new Error(\"video is undefined\")\n        }\n\n        if (video.src.substring(0, 4) === \"blob\" || !video.src) {\n            if (video.baseURI) {\n                return video.baseURI\n            }\n        }\n        if (video.src) {\n            return video.src\n        }\n\n        return \"\"\n    }\n\n    start() {\n        this.sendAllCurrentUrlData()\n\n\n        this.createObserver()\n    }\n\n    protected complete(): void {\n    }\n\n    protected error(e): void {\n    }\n\n    protected next(notification: FilterNotification): void {\n        if (notification.type !== NotificationTypes.FilterNotification) {\n            return\n        }\n\n\n        if (notification.predict === \"show\") {\n            this.changeCss(notification.imgSrc)\n\n        }\n    }\n\n\n    private sendAllCurrentUrlData() {\n        const urlImages: Array<HTMLImageElement> = this.getAllCurrentImages()\n        const urlVideos: Array<HTMLVideoElement> = this.getAllCurrentVideos()\n\n        this.sendData(urlImages, urlVideos)\n\n\n    }\n\n    private getAllCurrentImages(): Array<HTMLImageElement> {\n        const imagesTable: Array<HTMLImageElement> = new Array<HTMLImageElement>(document.images.length)\n\n        for (let i = 0; i < document.images.length; i++) {\n            if (document.images[i].src.length) {\n                imagesTable[i] = document.images[i]\n                this.checkTable[document.images[i].src] = document.images[i]\n\n            }\n        }\n\n\n        return imagesTable\n    }\n\n    private getAllCurrentVideos(): Array<HTMLVideoElement> {\n        const elements: any = document.getElementsByTagName(\"video\")\n        const videos: Array<HTMLVideoElement> = new Array<HTMLVideoElement>(elements.length)\n\n        for (const element of elements) {\n            const url = DocumentObserver.getUrlVideo(element)\n            if (url.length) {\n                this.checkTable[url] = element\n                videos.push(element)\n            }\n\n        }\n\n        return videos\n\n    }\n\n\n    private checkSrc(target: HTMLElement, url: string): boolean {\n        if (this.checkTable[url] === undefined) {\n            this.checkTable[url] = target\n            return false\n        }\n        return true\n\n    }\n\n    private getAllNewData(mutations: MutationRecord[]): { images: Array<HTMLImageElement>, videos: Array<HTMLVideoElement> } {\n        const images: Array<HTMLImageElement> = new Array<HTMLImageElement>()\n        const videos: Array<HTMLVideoElement> = new Array<HTMLVideoElement>()\n\n        for (const mutation of mutations) {\n            const target: any = mutation.target\n\n            if (target instanceof HTMLImageElement) {\n                if (!this.checkSrc(target, target.src)) {\n                    images.push(target)\n\n                }\n            } else if (target instanceof HTMLVideoElement) {\n                const src = DocumentObserver.getUrlVideo(target)\n                if (!this.checkSrc(target, src)) {\n                    videos.push(target)\n\n                }\n            }\n\n        }\n\n\n        return {images, videos}\n    }\n\n    private observerImages(mutations: MutationRecord[], observer: MutationObserver) {\n        const {images, videos} = this.getAllNewData(mutations)\n        this.sendData(images, videos)\n\n    }\n\n    private createObserver() {\n        const observer: MutationObserver = new MutationObserver(this.observerImages.bind(this))\n        const config: MutationObserverInit = {\n            childList: false,\n            attributes: true,\n            characterData: true,\n            subtree: true,\n            // attributeFilter: [\"src\"],\n        }\n\n        observer.observe(document.body, config)\n\n    }\n\n\n    private sendData(images: Array<HTMLImageElement>, videos: Array<HTMLVideoElement>) {\n\n        if (images === undefined || videos === undefined) {\n            throw this.errorMessages.noArray\n        }\n\n        this.sendImageUrlsNotification(images)\n        // this.sendContentNotification(images, videos)\n\n    }\n\n    private changeCss(src: string) {\n\n        if (src === undefined) {\n            throw this.errorMessages.noSrc\n        }\n\n\n        if (this.checkTable[src]) { // setAttribute(\"style\", \"display: !important\")\n            this.checkTable[src].setAttribute(\"style\", \"display: inline !important\")\n        }\n\n    }\n\n    private sendImageUrlsNotification(images: Array<HTMLImageElement>) {\n\n        for (const image of images) {\n\n            if (image) {\n                this.logger.updateTime(image.src)\n                image.onload = () => {\n                    this.logger.updateTime(image.src)\n                }\n\n                this.subject.next({type: NotificationTypes.ImageSourceNotification, message: image.src})\n            }\n        }\n\n    }\n\n    private sendContentNotification(images: Array<HTMLImageElement>, videos: Array<HTMLVideoElement>) {\n        const contentNotification: ContentNotification = {\n            id: \"replace  this in communication\",\n            type: NotificationTypes.ContentNotification,\n            images,\n            videos\n        }\n\n        this.subject.next(contentNotification)\n    }\n\n\n}\n\n","import Module from \"../module\"\nimport {\n    ContentNotification,\n    FilterNotification,\n    ImageDataNotification,\n    ImageNotification,\n    ImageUrlsNotification,\n    Notification,\n    NotificationTypes\n} from \"../../app/interfaces/notifications\"\n\nexport const ENABLE_LOGGERS = true\n\nexport class TimeLogger extends Module <Notification, Notification> {\n\n\n    constructor(private loggerName) {\n        super()\n\n\n    }\n\n    private exportCSV = false\n\n    private timers: { [index: string]: { timeInMilliseconds: number, isDate: boolean } } = {}\n\n    private callbacks = {\n        [NotificationTypes.ImageSourceNotification]: this.imageSourceNotification.bind(this),\n        [NotificationTypes.FilterNotification]: this.filterNotification.bind(this),\n        [NotificationTypes.ImageNotification]: this.imageNotification.bind(this),\n        [NotificationTypes.ContentNotification]: this.contentNotification.bind(this),\n        [NotificationTypes.ImageDataNotification]: this.imageDataNotification.bind(this),\n        [NotificationTypes.ImageUrlsNotification]: this.imageUrlsNotification.bind(this)\n    }\n\n    private toCsvFile(data: string) {\n        const a = document.createElement(\"a\")\n        const blob = new Blob([data], {type: \"text/csv\"})\n        a.href = URL.createObjectURL(blob)\n        a.download = `${this.loggerName}.csv`\n        document.body.appendChild(a)\n        a.click()\n    }\n\n    protected complete(): void {\n    }\n\n    protected error(e): void {\n    }\n\n    protected next(notification: Notification): void {\n\n        if (this.callbacks[notification.type]) {\n            this.callbacks[notification.type](notification)\n        }\n\n    }\n\n    private imageSourceNotification(notification: Notification) {\n\n        this.updateTime(notification.message)\n    }\n\n    private filterNotification(notification: FilterNotification) {\n\n        this.updateTime(notification.imgSrc)\n    }\n\n    private imageNotification(notification: ImageNotification) {\n\n        this.updateTime(notification.img.src)\n    }\n\n    private contentNotification(notification: ContentNotification) {\n        if (notification.images === undefined) {\n            return\n        }\n        notification.images.forEach(value => this.updateTime(value.src))\n\n    }\n\n    private imageDataNotification(notification: ImageDataNotification) {\n        if (notification.inputs === undefined) {\n            return\n        }\n        notification.inputs.forEach(value => this.updateTime(value.src))\n\n    }\n\n    private imageUrlsNotification(notification: ImageUrlsNotification) {\n        notification.imageUrls.forEach(this.updateTime.bind(this))\n    }\n\n\n    updateTime(index: string) {\n        const currentTimeInMilliseconds = new Date().getTime()\n\n        if (this.timers[index]) {\n            this.timers[index].timeInMilliseconds = currentTimeInMilliseconds - this.timers[index].timeInMilliseconds\n            this.timers[index].isDate = false\n        } else {\n            this.timers[index] = {timeInMilliseconds: currentTimeInMilliseconds, isDate: true}\n        }\n\n        this.toCsvColumn()\n\n    }\n\n    private toCsvColumn() {\n        const loggedTimes = Object.values(this.timers).filter(value => value.isDate === false)\n\n        if (loggedTimes.length < 600) {\n            console.log(`${this.loggerName} loggedTimes ${loggedTimes.length}`)\n            return\n        }\n\n        if (this.exportCSV) {\n            return\n        }\n\n        let csv = `${this.loggerName}\\n`\n\n        for (const timer of loggedTimes) {\n            csv += `${timer.timeInMilliseconds}\\n`\n        }\n\n        this.toCsvFile(csv)\n\n        this.exportCSV = true\n    }\n\n}\n","import {Observer, Subject, Subscription} from \"rxjs\"\n\n\nexport default abstract class Module<I, O> {\n\n  subject = new Subject<O>()\n\n  observer: Observer<I> = {\n    next: this.next.bind(this),\n    error: this.error.bind(this),\n    complete: this.complete.bind(this),\n  }\n\n  protected subscriptions: Array<Subscription> = new Array<Subscription>()\n\n  protected abstract next(notification: I): void\n\n  protected abstract error(e): void\n\n  protected abstract complete(): void\n\n  observe(abstractModule: Module<any, I>) {\n    this.subscriptions.push(abstractModule.subject.subscribe(this.observer))\n  }\n\n  unsubscribe() {\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe()\n    }\n  }\n\n}\n\n"],"sourceRoot":"webpack:///"}